"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/CarteiraGraficos.tsx":
/*!*********************************************!*\
  !*** ./app/components/CarteiraGraficos.tsx ***!
  \*********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CarteiraGraficos)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_chartjs_2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-chartjs-2 */ \"(app-pages-browser)/./node_modules/react-chartjs-2/dist/index.js\");\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! chart.js */ \"(app-pages-browser)/./node_modules/chart.js/dist/chart.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\nchart_js__WEBPACK_IMPORTED_MODULE_2__.Chart.register(chart_js__WEBPACK_IMPORTED_MODULE_2__.CategoryScale, chart_js__WEBPACK_IMPORTED_MODULE_2__.LinearScale, chart_js__WEBPACK_IMPORTED_MODULE_2__.BarElement, chart_js__WEBPACK_IMPORTED_MODULE_2__.PointElement, chart_js__WEBPACK_IMPORTED_MODULE_2__.LineElement, chart_js__WEBPACK_IMPORTED_MODULE_2__.ArcElement, chart_js__WEBPACK_IMPORTED_MODULE_2__.Title, chart_js__WEBPACK_IMPORTED_MODULE_2__.Tooltip, chart_js__WEBPACK_IMPORTED_MODULE_2__.Legend);\nconst chartOptions = [\n    {\n        value: 'bar',\n        label: 'Ranking de Poder (Barras)'\n    },\n    {\n        value: 'line',\n        label: 'Ranking de Poder (Linha)'\n    },\n    {\n        value: 'circle',\n        label: 'Distribuição de Poder (Pizza)'\n    }\n];\n// Função para encurtar o endereço da carteira para melhor visualização\nconst shortenAddress = (address)=>{\n    if (!address || address.length < 8) return address;\n    return \"\".concat(address.substring(0, 4), \"...\").concat(address.substring(address.length - 4));\n};\nfunction CarteiraGraficos(param) {\n    let { data, userWallet, condition, tamanhoGrafico, quantityDados } = param;\n    _s();\n    const [chartType, setChartType] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('bar');\n    const [timeFrame, setTimeFrame] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('dia');\n    // Hooks devem ser chamados no nível superior, não dentro de condicionais.\n    // A lógica de `useMemo` agora verifica a condição internamente.\n    const processedChartData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"CarteiraGraficos.useMemo[processedChartData]\": ()=>{\n            if (condition !== 'burnedTime' || !data || data.length === 0) {\n                return null;\n            }\n            const burnedRankingData = data;\n            let processedData;\n            let labels;\n            if (timeFrame === 'mes') {\n                const monthlyData = burnedRankingData.reduce({\n                    \"CarteiraGraficos.useMemo[processedChartData].monthlyData\": (acc, item)=>{\n                        const date = new Date(item.date);\n                        const monthKey = \"\".concat(date.getFullYear(), \"-\").concat(String(date.getMonth() + 1).padStart(2, '0'));\n                        if (!acc[monthKey]) {\n                            acc[monthKey] = {\n                                date: new Date(date.getFullYear(), date.getMonth(), 1),\n                                nftBurned: 0,\n                                trdBburned: 0,\n                                totalPower: 0\n                            };\n                        }\n                        acc[monthKey].nftBurned += item.nftBurned || 0;\n                        acc[monthKey].trdBburned += item.trdBburned || 0;\n                        acc[monthKey].totalPower += item.totalPower || 0;\n                        return acc;\n                    }\n                }[\"CarteiraGraficos.useMemo[processedChartData].monthlyData\"], {});\n                processedData = Object.values(monthlyData).sort({\n                    \"CarteiraGraficos.useMemo[processedChartData]\": (a, b)=>a.date.getTime() - b.date.getTime()\n                }[\"CarteiraGraficos.useMemo[processedChartData]\"]);\n                labels = processedData.map({\n                    \"CarteiraGraficos.useMemo[processedChartData]\": (item)=>new Date(item.date).toLocaleDateString('pt-BR', {\n                            month: 'short',\n                            year: '2-digit',\n                            timeZone: 'UTC'\n                        })\n                }[\"CarteiraGraficos.useMemo[processedChartData]\"]);\n            } else {\n                // Inverte o array para que as datas fiquem em ordem crescente no gráfico.\n                processedData = burnedRankingData.slice(0, quantityDados || 45).reverse();\n                labels = processedData.map({\n                    \"CarteiraGraficos.useMemo[processedChartData]\": (item)=>new Date(item.date).toLocaleDateString('pt-BR', {\n                            day: '2-digit',\n                            month: '2-digit',\n                            timeZone: 'UTC'\n                        })\n                }[\"CarteiraGraficos.useMemo[processedChartData]\"]);\n            }\n            const datasetConfigs = [\n                {\n                    label: 'NFTs',\n                    data: processedData.map({\n                        \"CarteiraGraficos.useMemo[processedChartData]\": (item)=>item.nftBurned || 0\n                    }[\"CarteiraGraficos.useMemo[processedChartData]\"]),\n                    color: '255, 99, 132' /* Vermelho */ \n                },\n                {\n                    label: 'TRD',\n                    data: processedData.map({\n                        \"CarteiraGraficos.useMemo[processedChartData]\": (item)=>item.trdBburned || 0\n                    }[\"CarteiraGraficos.useMemo[processedChartData]\"]),\n                    color: '54, 162, 235' /* Azul */ \n                },\n                {\n                    label: 'Power Total',\n                    data: processedData.map({\n                        \"CarteiraGraficos.useMemo[processedChartData]\": (item)=>item.totalPower || 0\n                    }[\"CarteiraGraficos.useMemo[processedChartData]\"]),\n                    color: '255, 206, 86' /* Amarelo */ \n                }\n            ];\n            return {\n                labels,\n                datasets: datasetConfigs.map({\n                    \"CarteiraGraficos.useMemo[processedChartData]\": (config)=>({\n                            label: config.label,\n                            data: config.data,\n                            backgroundColor: \"rgba(\".concat(config.color, \", 0.6)\"),\n                            borderColor: \"rgba(\".concat(config.color, \", 1)\"),\n                            borderWidth: 1,\n                            barThickness: 7\n                        })\n                }[\"CarteiraGraficos.useMemo[processedChartData]\"])\n            };\n        }\n    }[\"CarteiraGraficos.useMemo[processedChartData]\"], [\n        data,\n        condition,\n        timeFrame,\n        quantityDados\n    ]);\n    // Se não houver dados, exibe uma mensagem de carregamento.\n    if (!data || data.length === 0) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"text-center text-gray-500 h-full flex items-center justify-center\",\n            children: \"Carregando dados do ranking...\"\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n            lineNumber: 94,\n            columnNumber: 16\n        }, this);\n    }\n    // Lógica para o gráfico de queima (condição 'burned')\n    if (condition === 'burnedTime') {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"p-4\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"absolute top-2 right-2 flex bg-gray-100 rounded-full shadow-sm\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setTimeFrame('dia'),\n                            className: \"px-3 py-1 text-xs font-medium rounded-l-full transition-colors \".concat(timeFrame === 'dia' ? 'bg-white text-gray-800 shadow' : 'text-gray-600 hover:bg-gray-200'),\n                            children: \"Dia\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                            lineNumber: 102,\n                            columnNumber: 21\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: ()=>setTimeFrame('mes'),\n                            className: \"px-3 py-1 text-xs font-medium rounded-r-full transition-colors \".concat(timeFrame === 'mes' ? 'bg-white text-gray-800 shadow' : 'text-gray-600 hover:bg-gray-200'),\n                            children: \"M\\xeas\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                            lineNumber: 108,\n                            columnNumber: 21\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                    lineNumber: 101,\n                    columnNumber: 17\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"relative h-[\".concat(tamanhoGrafico, \"px] w-full flex items-center justify-center\"),\n                    children: chartType === 'bar' && processedChartData && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_3__.Bar, {\n                        data: processedChartData,\n                        options: {\n                            responsive: true,\n                            plugins: {\n                                legend: {\n                                    display: true\n                                },\n                                title: {\n                                    display: true,\n                                    text: 'Histórico de Queima'\n                                }\n                            }\n                        }\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                        lineNumber: 117,\n                        columnNumber: 67\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                    lineNumber: 116,\n                    columnNumber: 17\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n            lineNumber: 100,\n            columnNumber: 13\n        }, this);\n    }\n    const labeGrafic = condition === 'power' ? 'Poder Total' : condition === 'nfts' ? 'Quantidade de NFTs' : condition === 'investment' ? 'Investimento Total (SOLANA)' : condition === 'burned' ? 'Burned' : condition === 'burnedTRD' ? 'Burned (TRD)' : 'Percentual de Poder Total (%)';\n    // Para outras condições, assumimos que `data` é do tipo `Ranking[]`\n    const rankingData = data;\n    const sortedData = [\n        ...rankingData\n    ].sort((a, b)=>{\n        if (condition === 'power') {\n            return b.totalPower - a.totalPower;\n        } else if (condition === 'nfts') {\n            return b.totalNfts - a.totalNfts;\n        } else if (condition === 'share') {\n            return b.powerShare - a.powerShare;\n        } else if (condition === 'investment') {\n            return b.totalInvestment - a.totalInvestment;\n        } else if (condition === 'burnedTRD') {\n            return b.trdBurned - a.trdBurned;\n        } else if (condition === 'nftQueimados') {\n            return b.nftBurned - a.nftBurned;\n        } else if (condition === 'rewards') {\n            return b.nftBurned - a.nftBurned;\n        }\n    });\n    // --- FIX: Calculate position after sorting the data ---\n    const posicao = sortedData.findIndex((item)=>item.wallet === userWallet);\n    const topData = sortedData.slice(0, quantityDados || 45);\n    const labels = topData.map((item, index)=>{\n        if (userWallet && item.wallet === userWallet) {\n            return 'You';\n        }\n        return \"\".concat(index + 1);\n    });\n    const totalPowerData = condition === 'power' ? topData.map((item)=>item.totalPower) : condition === 'nfts' ? topData.map((item)=>item.totalNfts) : condition === 'investment' ? topData.map((item)=>item.totalInvestment) : condition === 'burnedTRD' ? topData.map((item)=>item.trdBurned) : condition === 'rewards' ? topData.map((item)=>item.trdBurned) : condition === 'nftQueimados' ? topData.map((item)=>item.nftBurned) : topData.map((item)=>item.powerShare);\n    const powerShareData = topData.map((item)=>item.powerShare);\n    const totalNftsData = topData.map((item)=>item.totalNfts);\n    // Define as cores para o gráfico de barras, destacando a barra do usuário\n    const barBackgroundColors = labels.map((label)=>label === 'You' ? 'rgba(196, 72, 23, 0.6)' : 'rgba(136, 132, 216, 0.6)');\n    const barBorderColors = labels.map((label)=>label === 'You' ? 'rgba(199, 66, 25, 1)' : 'rgba(136, 132, 216, 1)');\n    const barData = {\n        labels,\n        datasets: [\n            {\n                label: labeGrafic,\n                data: totalPowerData,\n                backgroundColor: barBackgroundColors,\n                borderColor: barBorderColors,\n                borderWidth: 1,\n                barThickness: 10\n            }\n        ]\n    };\n    const lineData = {\n        labels,\n        datasets: [\n            {\n                label: 'Poder Total',\n                data: totalNftsData,\n                borderColor: '#6366f1',\n                backgroundColor: '#a5b4fc',\n                fill: false,\n                tension: 0.1\n            }\n        ]\n    };\n    const doughnutData = {\n        labels,\n        datasets: [\n            {\n                label: 'Distribuição de Poder (%)',\n                data: powerShareData,\n                backgroundColor: [\n                    'rgba(255, 99, 132, 0.6)',\n                    'rgba(54, 162, 235, 0.6)',\n                    'rgba(255, 206, 86, 0.6)',\n                    'rgba(75, 192, 192, 0.6)',\n                    'rgba(153, 102, 255, 0.6)',\n                    'rgba(255, 159, 64, 0.6)',\n                    'rgba(199, 199, 199, 0.6)',\n                    'rgba(83, 102, 255, 0.6)'\n                ],\n                borderWidth: 1\n            }\n        ]\n    };\n    const chartOptionsConfig = {\n        responsive: true,\n        plugins: {\n            legend: {\n                display: true\n            },\n            title: {\n                display: true,\n                text: chartType === 'circle' ? 'Distribuição de Poder (%)' : condition === 'power' ? 'Ranking de Poder' : condition === 'nfts' ? 'Ranking de NFTs' : condition === 'investment' ? 'Ranking de Investimento' : condition === 'burned' ? 'Queima por Dia' : condition === 'burnedTRD' ? 'Queima de TRD' : 'Ranking'\n            }\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"relative h-[\".concat(tamanhoGrafico, \"px] w-full flex items-center justify-center\"),\n                children: [\n                    chartType === 'bar' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_3__.Bar, {\n                        data: barData,\n                        options: chartOptionsConfig\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                        lineNumber: 280,\n                        columnNumber: 41\n                    }, this),\n                    chartType === 'line' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_3__.Line, {\n                        data: lineData,\n                        options: chartOptionsConfig\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                        lineNumber: 281,\n                        columnNumber: 42\n                    }, this),\n                    chartType === 'circle' && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_3__.Doughnut, {\n                        data: doughnutData,\n                        options: chartOptionsConfig\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                        lineNumber: 282,\n                        columnNumber: 44\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                lineNumber: 279,\n                columnNumber: 13\n            }, this),\n            condition !== 'burned' && posicao >= 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center mt-4 font-bold text-lg text-gray-700\",\n                children: [\n                    \"Sua posi\\xe7\\xe3o no ranking \\xe9: \",\n                    posicao + 1\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n                lineNumber: 285,\n                columnNumber: 17\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\LVS 06 Dev\\\\Desktop\\\\projetosnodejs\\\\teste\\\\app\\\\components\\\\CarteiraGraficos.tsx\",\n        lineNumber: 278,\n        columnNumber: 9\n    }, this);\n}\n_s(CarteiraGraficos, \"rywmMqmFy+pt9MUxpzYcf6pRFkI=\");\n_c = CarteiraGraficos;\nvar _c;\n$RefreshReg$(_c, \"CarteiraGraficos\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL0NhcnRlaXJhR3JhZmljb3MudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQzBDO0FBQ1k7QUFFa0Y7QUFDeElLLDJDQUFLQSxDQUFDVSxRQUFRLENBQUNULG1EQUFhQSxFQUFFQyxpREFBV0EsRUFBRUMsZ0RBQVVBLEVBQUVDLGtEQUFZQSxFQUFFQyxpREFBV0EsRUFBRUMsZ0RBQVVBLEVBQUVDLDJDQUFLQSxFQUFFQyw2Q0FBT0EsRUFBRUMsNENBQU1BO0FBV3BILE1BQU1FLGVBQWU7SUFDakI7UUFBRUMsT0FBTztRQUFPQyxPQUFPO0lBQTRCO0lBQ25EO1FBQUVELE9BQU87UUFBUUMsT0FBTztJQUEyQjtJQUNuRDtRQUFFRCxPQUFPO1FBQVVDLE9BQU87SUFBZ0M7Q0FDN0Q7QUFFRCx1RUFBdUU7QUFDdkUsTUFBTUMsaUJBQWlCLENBQUNDO0lBQ3BCLElBQUksQ0FBQ0EsV0FBV0EsUUFBUUMsTUFBTSxHQUFHLEdBQUcsT0FBT0Q7SUFDM0MsT0FBTyxHQUFnQ0EsT0FBN0JBLFFBQVFFLFNBQVMsQ0FBQyxHQUFHLElBQUcsT0FBMkMsT0FBdENGLFFBQVFFLFNBQVMsQ0FBQ0YsUUFBUUMsTUFBTSxHQUFHO0FBQzlFO0FBRWUsU0FBU0UsaUJBQWlCLEtBQXFGO1FBQXJGLEVBQUVDLElBQUksRUFBRUMsVUFBVSxFQUFFQyxTQUFTLEVBQUVDLGNBQWMsRUFBRUMsYUFBYSxFQUF5QixHQUFyRjs7SUFDckMsTUFBTSxDQUFDQyxXQUFXQyxhQUFhLEdBQUc5QiwrQ0FBUUEsQ0FBQztJQUMzQyxNQUFNLENBQUMrQixXQUFXQyxhQUFhLEdBQUdoQywrQ0FBUUEsQ0FBZ0I7SUFFMUQsMEVBQTBFO0lBQzFFLGdFQUFnRTtJQUNoRSxNQUFNaUMscUJBQXFCaEMsOENBQU9BO3dEQUFDO1lBQy9CLElBQUl5QixjQUFjLGdCQUFnQixDQUFDRixRQUFRQSxLQUFLSCxNQUFNLEtBQUssR0FBRztnQkFDMUQsT0FB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QTtpQkFDSDtnQkFDREUsYUFBYTtZQUNqQjtTQUNIO0lBQ0w7SUFFQSxNQUFNbUMscUJBQXFCO1FBQ3ZCNUIsWUFBWTtRQUNaQyxTQUFTO1lBQ0xDLFFBQVE7Z0JBQUVDLFNBQVM7WUFBSztZQUN4QkMsT0FBTztnQkFDSEQsU0FBUztnQkFDVEUsTUFBTXRELGNBQWMsV0FDZCw4QkFDQUgsY0FBYyxVQUNWLHFCQUNBQSxjQUFjLFNBQ1Ysb0JBQ0FBLGNBQWMsZUFDViw0QkFDQUEsY0FBYyxXQUNWLG1CQUNBQSxjQUFjLGNBQ1Ysa0JBQ0E7WUFDOUI7UUFDSjtJQUNKO0lBRUEscUJBQ0ksOERBQUMrQztRQUFJQyxXQUFVOzswQkFDWCw4REFBQ0Q7Z0JBQUlDLFdBQVcsZUFBOEIsT0FBZi9DLGdCQUFlOztvQkFDekNFLGNBQWMsdUJBQVMsOERBQUMzQixnREFBR0E7d0JBQUNzQixNQUFNNkU7d0JBQVN4QixTQUFTNkI7Ozs7OztvQkFDcEQ3RSxjQUFjLHdCQUFVLDhEQUFDMUIsaURBQUlBO3dCQUFDcUIsTUFBTThFO3dCQUFVekIsU0FBUzZCOzs7Ozs7b0JBQ3ZEN0UsY0FBYywwQkFBWSw4REFBQ3pCLHFEQUFRQTt3QkFBQ29CLE1BQU1pRjt3QkFBYzVCLFNBQVM2Qjs7Ozs7Ozs7Ozs7O1lBRXJFaEYsY0FBYyxZQUFZaUUsV0FBVyxtQkFDbEMsOERBQUNsQjtnQkFBSUMsV0FBVTs7b0JBQW1EO29CQUNuQ2lCLFVBQVU7Ozs7Ozs7Ozs7Ozs7QUFLekQ7R0F0UXdCcEU7S0FBQUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTFZTIDA2IERldlxcRGVza3RvcFxccHJvamV0b3Nub2RlanNcXHRlc3RlXFxhcHBcXGNvbXBvbmVudHNcXENhcnRlaXJhR3JhZmljb3MudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcclxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7IEJhciwgTGluZSwgRG91Z2hudXQgfSBmcm9tICdyZWFjdC1jaGFydGpzLTInO1xyXG5pbXBvcnQgeyBSYW5raW5nLCBSYW5raW5nQnVybmVkIH0gZnJvbSAnLi4vdHlwZXMvcmFua2luZyc7XHJcbmltcG9ydCB7IENoYXJ0LCBDYXRlZ29yeVNjYWxlLCBMaW5lYXJTY2FsZSwgQmFyRWxlbWVudCwgUG9pbnRFbGVtZW50LCBMaW5lRWxlbWVudCwgQXJjRWxlbWVudCwgVGl0bGUsIFRvb2x0aXAsIExlZ2VuZCB9IGZyb20gJ2NoYXJ0LmpzJztcclxuQ2hhcnQucmVnaXN0ZXIoQ2F0ZWdvcnlTY2FsZSwgTGluZWFyU2NhbGUsIEJhckVsZW1lbnQsIFBvaW50RWxlbWVudCwgTGluZUVsZW1lbnQsIEFyY0VsZW1lbnQsIFRpdGxlLCBUb29sdGlwLCBMZWdlbmQpO1xyXG5cclxuLy8gSW50ZXJmYWNlIHBhcmEgYXMgcHJvcHMgZG8gY29tcG9uZW50ZVxyXG5pbnRlcmZhY2UgQ2FydGVpcmFHcmFmaWNvc1Byb3BzIHtcclxuICAgIGRhdGE6IChSYW5raW5nIHwgUmFua2luZ0J1cm5lZClbXTtcclxuICAgIHVzZXJXYWxsZXQ/OiBzdHJpbmc7XHJcbiAgICBjb25kaXRpb24/OiBzdHJpbmc7XHJcbiAgICB0YW1hbmhvR3JhZmljbz86IHN0cmluZztcclxuICAgIHF1YW50aXR5RGFkb3M/OiBudW1iZXI7XHJcbn1cclxuXHJcbmNvbnN0IGNoYXJ0T3B0aW9ucyA9IFtcclxuICAgIHsgdmFsdWU6ICdiYXInLCBsYWJlbDogJ1JhbmtpbmcgZGUgUG9kZXIgKEJhcnJhcyknIH0sXHJcbiAgICB7IHZhbHVlOiAnbGluZScsIGxhYmVsOiAnUmFua2luZyBkZSBQb2RlciAoTGluaGEpJyB9LFxyXG4gICAgeyB2YWx1ZTogJ2NpcmNsZScsIGxhYmVsOiAnRGlzdHJpYnVpw6fDo28gZGUgUG9kZXIgKFBpenphKScgfSxcclxuXTtcclxuXHJcbi8vIEZ1bsOnw6NvIHBhcmEgZW5jdXJ0YXIgbyBlbmRlcmXDp28gZGEgY2FydGVpcmEgcGFyYSBtZWxob3IgdmlzdWFsaXphw6fDo29cclxuY29uc3Qgc2hvcnRlbkFkZHJlc3MgPSAoYWRkcmVzczogc3RyaW5nKSA9PiB7XHJcbiAgICBpZiAoIWFkZHJlc3MgfHwgYWRkcmVzcy5sZW5ndGggPCA4KSByZXR1cm4gYWRkcmVzcztcclxuICAgIHJldHVybiBgJHthZGRyZXNzLnN1YnN0cmluZygwLCA0KX0uLi4ke2FkZHJlc3Muc3Vic3RyaW5nKGFkZHJlc3MubGVuZ3RoIC0gNCl9YDtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIENhcnRlaXJhR3JhZmljb3MoeyBkYXRhLCB1c2VyV2FsbGV0LCBjb25kaXRpb24sIHRhbWFuaG9HcmFmaWNvLCBxdWFudGl0eURhZG9zIH06IENhcnRlaXJhR3JhZmljb3NQcm9wcykge1xyXG4gICAgY29uc3QgW2NoYXJ0VHlwZSwgc2V0Q2hhcnRUeXBlXSA9IHVzZVN0YXRlKCdiYXInKTtcclxuICAgIGNvbnN0IFt0aW1lRnJhbWUsIHNldFRpbWVGcmFtZV0gPSB1c2VTdGF0ZTwnZGlhJyB8ICdtZXMnPignZGlhJyk7XHJcblxyXG4gICAgLy8gSG9va3MgZGV2ZW0gc2VyIGNoYW1hZG9zIG5vIG7DrXZlbCBzdXBlcmlvciwgbsOjbyBkZW50cm8gZGUgY29uZGljaW9uYWlzLlxyXG4gICAgLy8gQSBsw7NnaWNhIGRlIGB1c2VNZW1vYCBhZ29yYSB2ZXJpZmljYSBhIGNvbmRpw6fDo28gaW50ZXJuYW1lbnRlLlxyXG4gICAgY29uc3QgcHJvY2Vzc2VkQ2hhcnREYXRhID0gdXNlTWVtbygoKSA9PiB7XHJcbiAgICAgICAgaWYgKGNvbmRpdGlvbiAhPT0gJ2J1cm5lZFRpbWUnIHx8ICFkYXRhIHx8IGRhdGEubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgYnVybmVkUmFua2luZ0RhdGEgPSBkYXRhIGFzIFJhbmtpbmdCdXJuZWRbXTtcclxuICAgICAgICBsZXQgcHJvY2Vzc2VkRGF0YTtcclxuICAgICAgICBsZXQgbGFiZWxzO1xyXG5cclxuICAgICAgICBpZiAodGltZUZyYW1lID09PSAnbWVzJykge1xyXG4gICAgICAgICAgICBjb25zdCBtb250aGx5RGF0YSA9IGJ1cm5lZFJhbmtpbmdEYXRhLnJlZHVjZSgoYWNjLCBpdGVtKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBkYXRlID0gbmV3IERhdGUoaXRlbS5kYXRlKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG1vbnRoS2V5ID0gYCR7ZGF0ZS5nZXRGdWxsWWVhcigpfS0ke1N0cmluZyhkYXRlLmdldE1vbnRoKCkgKyAxKS5wYWRTdGFydCgyLCAnMCcpfWA7XHJcblxyXG4gICAgICAgICAgICAgICAgaWYgKCFhY2NbbW9udGhLZXldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYWNjW21vbnRoS2V5XSA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0ZTogbmV3IERhdGUoZGF0ZS5nZXRGdWxsWWVhcigpLCBkYXRlLmdldE1vbnRoKCksIDEpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBuZnRCdXJuZWQ6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyZEJidXJuZWQ6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvdGFsUG93ZXI6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBhY2NbbW9udGhLZXldLm5mdEJ1cm5lZCArPSBpdGVtLm5mdEJ1cm5lZCB8fCAwO1xyXG4gICAgICAgICAgICAgICAgYWNjW21vbnRoS2V5XS50cmRCYnVybmVkICs9IGl0ZW0udHJkQmJ1cm5lZCB8fCAwO1xyXG4gICAgICAgICAgICAgICAgYWNjW21vbnRoS2V5XS50b3RhbFBvd2VyICs9IGl0ZW0udG90YWxQb3dlciB8fCAwO1xyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybiBhY2M7XHJcbiAgICAgICAgICAgIH0sIHt9IGFzIFJlY29yZDxzdHJpbmcsIHsgZGF0ZTogRGF0ZTsgbmZ0QnVybmVkOiBudW1iZXI7IHRyZEJidXJuZWQ6IG51bWJlcjsgdG90YWxQb3dlcjogbnVtYmVyIH0+KTtcclxuXHJcbiAgICAgICAgICAgIHByb2Nlc3NlZERhdGEgPSBPYmplY3QudmFsdWVzKG1vbnRobHlEYXRhKS5zb3J0KChhLCBiKSA9PiBhLmRhdGUuZ2V0VGltZSgpIC0gYi5kYXRlLmdldFRpbWUoKSk7XHJcbiAgICAgICAgICAgIGxhYmVscyA9IHByb2Nlc3NlZERhdGEubWFwKGl0ZW0gPT4gbmV3IERhdGUoaXRlbS5kYXRlKS50b0xvY2FsZURhdGVTdHJpbmcoJ3B0LUJSJywgeyBtb250aDogJ3Nob3J0JywgeWVhcjogJzItZGlnaXQnLCB0aW1lWm9uZTogJ1VUQycgfSkpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIEludmVydGUgbyBhcnJheSBwYXJhIHF1ZSBhcyBkYXRhcyBmaXF1ZW0gZW0gb3JkZW0gY3Jlc2NlbnRlIG5vIGdyw6FmaWNvLlxyXG4gICAgICAgICAgICBwcm9jZXNzZWREYXRhID0gYnVybmVkUmFua2luZ0RhdGEuc2xpY2UoMCwgcXVhbnRpdHlEYWRvcyB8fCA0NSkucmV2ZXJzZSgpO1xyXG4gICAgICAgICAgICBsYWJlbHMgPSBwcm9jZXNzZWREYXRhLm1hcChpdGVtID0+IG5ldyBEYXRlKGl0ZW0uZGF0ZSkudG9Mb2NhbGVEYXRlU3RyaW5nKCdwdC1CUicsIHsgZGF5OiAnMi1kaWdpdCcsIG1vbnRoOiAnMi1kaWdpdCcsIHRpbWVab25lOiAnVVRDJyB9KSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBkYXRhc2V0Q29uZmlncyA9IFtcclxuICAgICAgICAgICAgeyBsYWJlbDogJ05GVHMnLCBkYXRhOiBwcm9jZXNzZWREYXRhLm1hcChpdGVtID0+IGl0ZW0ubmZ0QnVybmVkIHx8IDApLCBjb2xvcjogJzI1NSwgOTksIDEzMicgLyogVmVybWVsaG8gKi8gfSxcclxuICAgICAgICAgICAgeyBsYWJlbDogJ1RSRCcsIGRhdGE6IHByb2Nlc3NlZERhdGEubWFwKGl0ZW0gPT4gaXRlbS50cmRCYnVybmVkIHx8IDApLCBjb2xvcjogJzU0LCAxNjIsIDIzNScgLyogQXp1bCAqLyB9LFxyXG4gICAgICAgICAgICB7IGxhYmVsOiAnUG93ZXIgVG90YWwnLCBkYXRhOiBwcm9jZXNzZWREYXRhLm1hcChpdGVtID0+IGl0ZW0udG90YWxQb3dlciB8fCAwKSwgY29sb3I6ICcyNTUsIDIwNiwgODYnIC8qIEFtYXJlbG8gKi8gfSxcclxuICAgICAgICBdO1xyXG5cclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBsYWJlbHMsXHJcbiAgICAgICAgICAgIGRhdGFzZXRzOiBkYXRhc2V0Q29uZmlncy5tYXAoY29uZmlnID0+ICh7XHJcbiAgICAgICAgICAgICAgICBsYWJlbDogY29uZmlnLmxhYmVsLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogY29uZmlnLmRhdGEsXHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGByZ2JhKCR7Y29uZmlnLmNvbG9yfSwgMC42KWAsXHJcbiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogYHJnYmEoJHtjb25maWcuY29sb3J9LCAxKWAsXHJcbiAgICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMSxcclxuICAgICAgICAgICAgICAgIGJhclRoaWNrbmVzczogNyxcclxuICAgICAgICAgICAgfSkpLFxyXG4gICAgICAgIH07XHJcbiAgICB9LCBbZGF0YSwgY29uZGl0aW9uLCB0aW1lRnJhbWUsIHF1YW50aXR5RGFkb3NdKTtcclxuXHJcbiAgICAvLyBTZSBuw6NvIGhvdXZlciBkYWRvcywgZXhpYmUgdW1hIG1lbnNhZ2VtIGRlIGNhcnJlZ2FtZW50by5cclxuICAgIGlmICghZGF0YSB8fCBkYXRhLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyIHRleHQtZ3JheS01MDAgaC1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+Q2FycmVnYW5kbyBkYWRvcyBkbyByYW5raW5nLi4uPC9kaXY+O1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEzDs2dpY2EgcGFyYSBvIGdyw6FmaWNvIGRlIHF1ZWltYSAoY29uZGnDp8OjbyAnYnVybmVkJylcclxuICAgIGlmIChjb25kaXRpb24gPT09ICdidXJuZWRUaW1lJykge1xyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC00XCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFic29sdXRlIHRvcC0yIHJpZ2h0LTIgZmxleCBiZy1ncmF5LTEwMCByb3VuZGVkLWZ1bGwgc2hhZG93LXNtXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRUaW1lRnJhbWUoJ2RpYScpfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BweC0zIHB5LTEgdGV4dC14cyBmb250LW1lZGl1bSByb3VuZGVkLWwtZnVsbCB0cmFuc2l0aW9uLWNvbG9ycyAke3RpbWVGcmFtZSA9PT0gJ2RpYScgPyAnYmctd2hpdGUgdGV4dC1ncmF5LTgwMCBzaGFkb3cnIDogJ3RleHQtZ3JheS02MDAgaG92ZXI6YmctZ3JheS0yMDAnfWB9XHJcbiAgICAgICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBEaWFcclxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFRpbWVGcmFtZSgnbWVzJyl9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMSB0ZXh0LXhzIGZvbnQtbWVkaXVtIHJvdW5kZWQtci1mdWxsIHRyYW5zaXRpb24tY29sb3JzICR7dGltZUZyYW1lID09PSAnbWVzJyA/ICdiZy13aGl0ZSB0ZXh0LWdyYXktODAwIHNoYWRvdycgOiAndGV4dC1ncmF5LTYwMCBob3ZlcjpiZy1ncmF5LTIwMCd9YH1cclxuICAgICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIE3DqnNcclxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgcmVsYXRpdmUgaC1bJHt0YW1hbmhvR3JhZmljb31weF0gdy1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyYH0+XHJcbiAgICAgICAgICAgICAgICAgICAge2NoYXJ0VHlwZSA9PT0gJ2JhcicgJiYgcHJvY2Vzc2VkQ2hhcnREYXRhICYmIDxCYXIgZGF0YT17cHJvY2Vzc2VkQ2hhcnREYXRhfSBvcHRpb25zPXt7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBsdWdpbnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZ2VuZDogeyBkaXNwbGF5OiB0cnVlIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dDogJ0hpc3TDs3JpY28gZGUgUXVlaW1hJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB9fSAvPn1cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICA8L2RpdiA+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBsYWJlR3JhZmljID1cclxuICAgICAgICBjb25kaXRpb24gPT09ICdwb3dlcidcclxuICAgICAgICAgICAgPyAnUG9kZXIgVG90YWwnXHJcbiAgICAgICAgICAgIDogY29uZGl0aW9uID09PSAnbmZ0cydcclxuICAgICAgICAgICAgICAgID8gJ1F1YW50aWRhZGUgZGUgTkZUcydcclxuICAgICAgICAgICAgICAgIDogY29uZGl0aW9uID09PSAnaW52ZXN0bWVudCdcclxuICAgICAgICAgICAgICAgICAgICA/ICdJbnZlc3RpbWVudG8gVG90YWwgKFNPTEFOQSknXHJcbiAgICAgICAgICAgICAgICAgICAgOiBjb25kaXRpb24gPT09ICdidXJuZWQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gJ0J1cm5lZCdcclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBjb25kaXRpb24gPT09ICdidXJuZWRUUkQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdCdXJuZWQgKFRSRCknXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICdQZXJjZW50dWFsIGRlIFBvZGVyIFRvdGFsICglKSc7XHJcblxyXG4gICAgLy8gUGFyYSBvdXRyYXMgY29uZGnDp8O1ZXMsIGFzc3VtaW1vcyBxdWUgYGRhdGFgIMOpIGRvIHRpcG8gYFJhbmtpbmdbXWBcclxuICAgIGNvbnN0IHJhbmtpbmdEYXRhID0gZGF0YSBhcyBSYW5raW5nW107XHJcbiAgICBjb25zdCBzb3J0ZWREYXRhID0gWy4uLnJhbmtpbmdEYXRhXS5zb3J0KChhLCBiKSA9PiB7XHJcbiAgICAgICAgaWYgKGNvbmRpdGlvbiA9PT0gJ3Bvd2VyJykge1xyXG4gICAgICAgICAgICByZXR1cm4gYi50b3RhbFBvd2VyIC0gYS50b3RhbFBvd2VyO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoY29uZGl0aW9uID09PSAnbmZ0cycpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGIudG90YWxOZnRzIC0gYS50b3RhbE5mdHM7XHJcbiAgICAgICAgfSBlbHNlIGlmIChjb25kaXRpb24gPT09ICdzaGFyZScpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGIucG93ZXJTaGFyZSAtIGEucG93ZXJTaGFyZTtcclxuICAgICAgICB9IGVsc2UgaWYgKGNvbmRpdGlvbiA9PT0gJ2ludmVzdG1lbnQnKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBiLnRvdGFsSW52ZXN0bWVudCAtIGEudG90YWxJbnZlc3RtZW50O1xyXG4gICAgICAgIH0gZWxzZSBpZiAoY29uZGl0aW9uID09PSAnYnVybmVkVFJEJykgeyAgIFxyXG4gICAgICAgICAgICByZXR1cm4gYi50cmRCdXJuZWQgLSBhLnRyZEJ1cm5lZDtcclxuICAgICAgICB9IGVsc2UgaWYgKGNvbmRpdGlvbiA9PT0gJ25mdFF1ZWltYWRvcycpIHtcclxuICAgICAgICAgICAgcmV0dXJuIGIubmZ0QnVybmVkIC0gYS5uZnRCdXJuZWQ7XHJcbiAgICAgICAgfSBlbHNlIGlmIChjb25kaXRpb24gPT09ICdyZXdhcmRzJykge1xyXG4gICAgICAgICAgICByZXR1cm4gYi5uZnRCdXJuZWQgLSBhLm5mdEJ1cm5lZDtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIFxyXG4gICAgLy8gLS0tIEZJWDogQ2FsY3VsYXRlIHBvc2l0aW9uIGFmdGVyIHNvcnRpbmcgdGhlIGRhdGEgLS0tXHJcbiAgICBjb25zdCBwb3NpY2FvID0gc29ydGVkRGF0YS5maW5kSW5kZXgoaXRlbSA9PiBpdGVtLndhbGxldCA9PT0gdXNlcldhbGxldCk7XHJcblxyXG4gICAgY29uc3QgdG9wRGF0YSA9IHNvcnRlZERhdGEuc2xpY2UoMCwgcXVhbnRpdHlEYWRvcyB8fCA0NSk7XHJcblxyXG4gICAgY29uc3QgbGFiZWxzID0gdG9wRGF0YS5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7XHJcbiAgICAgICAgaWYgKHVzZXJXYWxsZXQgJiYgaXRlbS53YWxsZXQgPT09IHVzZXJXYWxsZXQpIHtcclxuICAgICAgICAgICAgcmV0dXJuICdZb3UnO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYCR7aW5kZXggKyAxfWA7XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCB0b3RhbFBvd2VyRGF0YSA9XHJcbiAgICAgICAgY29uZGl0aW9uID09PSAncG93ZXInXHJcbiAgICAgICAgICAgID8gdG9wRGF0YS5tYXAoaXRlbSA9PiBpdGVtLnRvdGFsUG93ZXIpXHJcbiAgICAgICAgICAgIDogY29uZGl0aW9uID09PSAnbmZ0cydcclxuICAgICAgICAgICAgICAgID8gdG9wRGF0YS5tYXAoaXRlbSA9PiBpdGVtLnRvdGFsTmZ0cylcclxuICAgICAgICAgICAgICAgIDogY29uZGl0aW9uID09PSAnaW52ZXN0bWVudCdcclxuICAgICAgICAgICAgICAgICAgICA/IHRvcERhdGEubWFwKGl0ZW0gPT4gaXRlbS50b3RhbEludmVzdG1lbnQpXHJcbiAgICAgICAgICAgICAgICAgICAgOiBjb25kaXRpb24gPT09ICdidXJuZWRUUkQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgID8gdG9wRGF0YS5tYXAoaXRlbSA9PiBpdGVtLnRyZEJ1cm5lZClcclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBjb25kaXRpb24gPT09ICdyZXdhcmRzJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB0b3BEYXRhLm1hcChpdGVtID0+IGl0ZW0udHJkQnVybmVkKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBjb25kaXRpb24gPT09ICduZnRRdWVpbWFkb3MnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB0b3BEYXRhLm1hcChpdGVtID0+IGl0ZW0ubmZ0QnVybmVkKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdG9wRGF0YS5tYXAoaXRlbSA9PiBpdGVtLnBvd2VyU2hhcmUpO1xyXG5cclxuICAgIGNvbnN0IHBvd2VyU2hhcmVEYXRhID0gdG9wRGF0YS5tYXAoaXRlbSA9PiBpdGVtLnBvd2VyU2hhcmUpO1xyXG4gICAgY29uc3QgdG90YWxOZnRzRGF0YSA9IHRvcERhdGEubWFwKGl0ZW0gPT4gaXRlbS50b3RhbE5mdHMpO1xyXG5cclxuICAgIC8vIERlZmluZSBhcyBjb3JlcyBwYXJhIG8gZ3LDoWZpY28gZGUgYmFycmFzLCBkZXN0YWNhbmRvIGEgYmFycmEgZG8gdXN1w6FyaW9cclxuICAgIGNvbnN0IGJhckJhY2tncm91bmRDb2xvcnMgPSBsYWJlbHMubWFwKGxhYmVsID0+XHJcbiAgICAgICAgbGFiZWwgPT09ICdZb3UnID8gJ3JnYmEoMTk2LCA3MiwgMjMsIDAuNiknIDogJ3JnYmEoMTM2LCAxMzIsIDIxNiwgMC42KSdcclxuICAgICk7XHJcblxyXG4gICAgY29uc3QgYmFyQm9yZGVyQ29sb3JzID0gbGFiZWxzLm1hcChsYWJlbCA9PlxyXG4gICAgICAgIGxhYmVsID09PSAnWW91JyA/ICdyZ2JhKDE5OSwgNjYsIDI1LCAxKScgOiAncmdiYSgxMzYsIDEzMiwgMjE2LCAxKSdcclxuICAgICk7ICAgIFxyXG5cclxuICAgIGNvbnN0IGJhckRhdGEgPSB7XHJcbiAgICAgICAgbGFiZWxzLFxyXG4gICAgICAgIGRhdGFzZXRzOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGxhYmVsOiBsYWJlR3JhZmljLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogdG90YWxQb3dlckRhdGEsXHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGJhckJhY2tncm91bmRDb2xvcnMsXHJcbiAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogYmFyQm9yZGVyQ29sb3JzLFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsXHJcbiAgICAgICAgICAgICAgICBiYXJUaGlja25lc3M6IDEwLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgIF0sXHJcbiAgICB9O1xyXG5cclxuXHJcbiAgICBjb25zdCBsaW5lRGF0YSA9IHtcclxuICAgICAgICBsYWJlbHMsXHJcbiAgICAgICAgZGF0YXNldHM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgbGFiZWw6ICdQb2RlciBUb3RhbCcsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiB0b3RhbE5mdHNEYXRhLFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjNjM2NmYxJyxcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogJyNhNWI0ZmMnLFxyXG4gICAgICAgICAgICAgICAgZmlsbDogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICB0ZW5zaW9uOiAwLjEsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgIH07XHJcblxyXG4gICAgY29uc3QgZG91Z2hudXREYXRhID0ge1xyXG4gICAgICAgIGxhYmVscyxcclxuICAgICAgICBkYXRhc2V0czogW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBsYWJlbDogJ0Rpc3RyaWJ1acOnw6NvIGRlIFBvZGVyICglKScsXHJcbiAgICAgICAgICAgICAgICBkYXRhOiBwb3dlclNoYXJlRGF0YSxcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogW1xyXG4gICAgICAgICAgICAgICAgICAgICdyZ2JhKDI1NSwgOTksIDEzMiwgMC42KScsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3JnYmEoNTQsIDE2MiwgMjM1LCAwLjYpJyxcclxuICAgICAgICAgICAgICAgICAgICAncmdiYSgyNTUsIDIwNiwgODYsIDAuNiknLFxyXG4gICAgICAgICAgICAgICAgICAgICdyZ2JhKDc1LCAxOTIsIDE5MiwgMC42KScsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3JnYmEoMTUzLCAxMDIsIDI1NSwgMC42KScsXHJcbiAgICAgICAgICAgICAgICAgICAgJ3JnYmEoMjU1LCAxNTksIDY0LCAwLjYpJyxcclxuICAgICAgICAgICAgICAgICAgICAncmdiYSgxOTksIDE5OSwgMTk5LCAwLjYpJyxcclxuICAgICAgICAgICAgICAgICAgICAncmdiYSg4MywgMTAyLCAyNTUsIDAuNiknXHJcbiAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDEsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgXSxcclxuICAgIH07XHJcblxyXG4gICAgY29uc3QgY2hhcnRPcHRpb25zQ29uZmlnID0ge1xyXG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICAgICAgcGx1Z2luczoge1xyXG4gICAgICAgICAgICBsZWdlbmQ6IHsgZGlzcGxheTogdHJ1ZSB9LFxyXG4gICAgICAgICAgICB0aXRsZToge1xyXG4gICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIHRleHQ6IGNoYXJ0VHlwZSA9PT0gJ2NpcmNsZSdcclxuICAgICAgICAgICAgICAgICAgICA/ICdEaXN0cmlidWnDp8OjbyBkZSBQb2RlciAoJSknXHJcbiAgICAgICAgICAgICAgICAgICAgOiBjb25kaXRpb24gPT09ICdwb3dlcidcclxuICAgICAgICAgICAgICAgICAgICAgICAgPyAnUmFua2luZyBkZSBQb2RlcidcclxuICAgICAgICAgICAgICAgICAgICAgICAgOiBjb25kaXRpb24gPT09ICduZnRzJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnUmFua2luZyBkZSBORlRzJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBjb25kaXRpb24gPT09ICdpbnZlc3RtZW50J1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gJ1JhbmtpbmcgZGUgSW52ZXN0aW1lbnRvJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogY29uZGl0aW9uID09PSAnYnVybmVkJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdRdWVpbWEgcG9yIERpYSdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBjb25kaXRpb24gPT09ICdidXJuZWRUUkQnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/ICdRdWVpbWEgZGUgVFJEJ1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiAnUmFua2luZydcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgfTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwicC00XCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXtgcmVsYXRpdmUgaC1bJHt0YW1hbmhvR3JhZmljb31weF0gdy1mdWxsIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyYH0+XHJcbiAgICAgICAgICAgICAgICB7Y2hhcnRUeXBlID09PSAnYmFyJyAmJiA8QmFyIGRhdGE9e2JhckRhdGF9IG9wdGlvbnM9e2NoYXJ0T3B0aW9uc0NvbmZpZ30gLz59XHJcbiAgICAgICAgICAgICAgICB7Y2hhcnRUeXBlID09PSAnbGluZScgJiYgPExpbmUgZGF0YT17bGluZURhdGF9IG9wdGlvbnM9e2NoYXJ0T3B0aW9uc0NvbmZpZ30gLz59XHJcbiAgICAgICAgICAgICAgICB7Y2hhcnRUeXBlID09PSAnY2lyY2xlJyAmJiA8RG91Z2hudXQgZGF0YT17ZG91Z2hudXREYXRhfSBvcHRpb25zPXtjaGFydE9wdGlvbnNDb25maWd9IC8+fVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAge2NvbmRpdGlvbiAhPT0gJ2J1cm5lZCcgJiYgcG9zaWNhbyA+PSAwICYmIChcclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIgbXQtNCBmb250LWJvbGQgdGV4dC1sZyB0ZXh0LWdyYXktNzAwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgU3VhIHBvc2nDp8OjbyBubyByYW5raW5nIMOpOiB7cG9zaWNhbyArIDF9XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgKX1cclxuICAgICAgICA8L2RpdiA+XHJcbiAgICApO1xyXG59Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlTWVtbyIsIkJhciIsIkxpbmUiLCJEb3VnaG51dCIsIkNoYXJ0IiwiQ2F0ZWdvcnlTY2FsZSIsIkxpbmVhclNjYWxlIiwiQmFyRWxlbWVudCIsIlBvaW50RWxlbWVudCIsIkxpbmVFbGVtZW50IiwiQXJjRWxlbWVudCIsIlRpdGxlIiwiVG9vbHRpcCIsIkxlZ2VuZCIsInJlZ2lzdGVyIiwiY2hhcnRPcHRpb25zIiwidmFsdWUiLCJsYWJlbCIsInNob3J0ZW5BZGRyZXNzIiwiYWRkcmVzcyIsImxlbmd0aCIsInN1YnN0cmluZyIsIkNhcnRlaXJhR3JhZmljb3MiLCJkYXRhIiwidXNlcldhbGxldCIsImNvbmRpdGlvbiIsInRhbWFuaG9HcmFmaWNvIiwicXVhbnRpdHlEYWRvcyIsImNoYXJ0VHlwZSIsInNldENoYXJ0VHlwZSIsInRpbWVGcmFtZSIsInNldFRpbWVGcmFtZSIsInByb2Nlc3NlZENoYXJ0RGF0YSIsImJ1cm5lZFJhbmtpbmdEYXRhIiwicHJvY2Vzc2VkRGF0YSIsImxhYmVscyIsIm1vbnRobHlEYXRhIiwicmVkdWNlIiwiYWNjIiwiaXRlbSIsImRhdGUiLCJEYXRlIiwibW9udGhLZXkiLCJTdHJpbmciLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwicGFkU3RhcnQiLCJuZnRCdXJuZWQiLCJ0cmRCYnVybmVkIiwidG90YWxQb3dlciIsIk9iamVjdCIsInZhbHVlcyIsInNvcnQiLCJhIiwiYiIsImdldFRpbWUiLCJtYXAiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJtb250aCIsInllYXIiLCJ0aW1lWm9uZSIsInNsaWNlIiwicmV2ZXJzZSIsImRheSIsImRhdGFzZXRDb25maWdzIiwiY29sb3IiLCJkYXRhc2V0cyIsImNvbmZpZyIsImJhY2tncm91bmRDb2xvciIsImJvcmRlckNvbG9yIiwiYm9yZGVyV2lkdGgiLCJiYXJUaGlja25lc3MiLCJkaXYiLCJjbGFzc05hbWUiLCJidXR0b24iLCJvbkNsaWNrIiwib3B0aW9ucyIsInJlc3BvbnNpdmUiLCJwbHVnaW5zIiwibGVnZW5kIiwiZGlzcGxheSIsInRpdGxlIiwidGV4dCIsImxhYmVHcmFmaWMiLCJyYW5raW5nRGF0YSIsInNvcnRlZERhdGEiLCJ0b3RhbE5mdHMiLCJwb3dlclNoYXJlIiwidG90YWxJbnZlc3RtZW50IiwidHJkQnVybmVkIiwicG9zaWNhbyIsImZpbmRJbmRleCIsIndhbGxldCIsInRvcERhdGEiLCJpbmRleCIsInRvdGFsUG93ZXJEYXRhIiwicG93ZXJTaGFyZURhdGEiLCJ0b3RhbE5mdHNEYXRhIiwiYmFyQmFja2dyb3VuZENvbG9ycyIsImJhckJvcmRlckNvbG9ycyIsImJhckRhdGEiLCJsaW5lRGF0YSIsImZpbGwiLCJ0ZW5zaW9uIiwiZG91Z2hudXREYXRhIiwiY2hhcnRPcHRpb25zQ29uZmlnIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/CarteiraGraficos.tsx\n"));

/***/ })

});
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/vimeo-video-element";
exports.ids = ["vendor-chunks/vimeo-video-element"];
exports.modules = {

/***/ "(ssr)/./node_modules/vimeo-video-element/dist/react.js":
/*!********************************************************!*\
  !*** ./node_modules/vimeo-video-element/dist/react.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ react_default)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _vimeo_video_element_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vimeo-video-element.js */ \"(ssr)/./node_modules/vimeo-video-element/dist/vimeo-video-element.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ // dist/react.ts\n\n\n// ../../node_modules/ce-la-react/dist/ce-la-react.js\nvar reservedReactProps = /* @__PURE__ */ new Set([\n    \"style\",\n    \"children\",\n    \"ref\",\n    \"key\",\n    \"suppressContentEditableWarning\",\n    \"suppressHydrationWarning\",\n    \"dangerouslySetInnerHTML\"\n]);\nvar reactPropToAttrNameMap = {\n    className: \"class\",\n    htmlFor: \"for\"\n};\nfunction defaultToAttributeName(propName) {\n    return propName.toLowerCase();\n}\nfunction defaultToAttributeValue(propValue) {\n    if (typeof propValue === \"boolean\") return propValue ? \"\" : void 0;\n    if (typeof propValue === \"function\") return void 0;\n    if (typeof propValue === \"object\" && propValue !== null) return void 0;\n    return propValue;\n}\nfunction createComponent({ react: React2, tagName, elementClass, events, displayName, defaultProps, toAttributeName = defaultToAttributeName, toAttributeValue = defaultToAttributeValue }) {\n    const IS_REACT_19_OR_NEWER = Number.parseInt(React2.version) >= 19;\n    const ReactComponent = React2.forwardRef((props, ref)=>{\n        var _a, _b;\n        const elementRef = React2.useRef(null);\n        const prevElemPropsRef = React2.useRef(/* @__PURE__ */ new Map());\n        const eventProps = {};\n        const attrs = {};\n        const reactProps = {};\n        const elementProps = {};\n        for (const [k, v] of Object.entries(props)){\n            if (reservedReactProps.has(k)) {\n                reactProps[k] = v;\n                continue;\n            }\n            const attrName = toAttributeName(reactPropToAttrNameMap[k] ?? k);\n            if (elementClass.prototype && k in elementClass.prototype && !(k in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) && !((_b = elementClass.observedAttributes) == null ? void 0 : _b.some((attr)=>attr === attrName))) {\n                elementProps[k] = v;\n                continue;\n            }\n            if (k.startsWith(\"on\")) {\n                eventProps[k] = v;\n                continue;\n            }\n            const attrValue = toAttributeValue(v);\n            if (attrName && attrValue != null) {\n                attrs[attrName] = String(attrValue);\n                if (!IS_REACT_19_OR_NEWER) {\n                    reactProps[attrName] = attrValue;\n                }\n            }\n            if (attrName && IS_REACT_19_OR_NEWER) {\n                const attrValueFromDefault = defaultToAttributeValue(v);\n                if (attrValue !== attrValueFromDefault) {\n                    reactProps[attrName] = attrValue;\n                } else {\n                    reactProps[attrName] = v;\n                }\n            }\n        }\n        if (false) {}\n        if ( true && (elementClass == null ? void 0 : elementClass.getTemplateHTML) && (elementClass == null ? void 0 : elementClass.shadowRootOptions)) {\n            const { mode, delegatesFocus } = elementClass.shadowRootOptions;\n            const templateShadowRoot = React2.createElement(\"template\", {\n                shadowrootmode: mode,\n                shadowrootdelegatesfocus: delegatesFocus,\n                dangerouslySetInnerHTML: {\n                    __html: elementClass.getTemplateHTML(attrs, props)\n                }\n            });\n            reactProps.children = [\n                templateShadowRoot,\n                reactProps.children\n            ];\n        }\n        return React2.createElement(tagName, {\n            ...defaultProps,\n            ...reactProps,\n            ref: React2.useCallback({\n                \"createComponent.ReactComponent.useCallback\": (node)=>{\n                    elementRef.current = node;\n                    if (typeof ref === \"function\") {\n                        ref(node);\n                    } else if (ref !== null) {\n                        ref.current = node;\n                    }\n                }\n            }[\"createComponent.ReactComponent.useCallback\"], [\n                ref\n            ])\n        });\n    });\n    ReactComponent.displayName = displayName ?? elementClass.name;\n    return ReactComponent;\n}\nfunction setProperty(node, name, value) {\n    var _a;\n    node[name] = value;\n    if (value == null && name in (((_a = globalThis.HTMLElement) == null ? void 0 : _a.prototype) ?? {})) {\n        node.removeAttribute(name);\n    }\n}\n// dist/react.ts\nvar react_default = createComponent({\n    react: react__WEBPACK_IMPORTED_MODULE_0__,\n    tagName: \"vimeo-video\",\n    elementClass: _vimeo_video_element_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    toAttributeName (propName) {\n        if (propName === \"muted\") return \"\";\n        if (propName === \"defaultMuted\") return \"muted\";\n        return defaultToAttributeName(propName);\n    }\n});\n /*! Bundled license information:\n\nce-la-react/dist/ce-la-react.js:\n  (**\n   * @license\n   * Copyright 2018 Google LLC\n   * SPDX-License-Identifier: BSD-3-Clause\n   *\n   * Modified version of `@lit/react` for vanilla custom elements with support for SSR.\n   *)\n*/ \n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/vimeo-video-element/dist/react.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/vimeo-video-element/dist/vimeo-video-element.js":
/*!**********************************************************************!*\
  !*** ./node_modules/vimeo-video-element/dist/vimeo-video-element.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vimeo_video_element_default)\n/* harmony export */ });\n/* harmony import */ var _vimeo_player_dist_player_es_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vimeo/player/dist/player.es.js */ \"(ssr)/./node_modules/@vimeo/player/dist/player.es.js\");\n\nconst EMBED_BASE = \"https://player.vimeo.com/video\";\nconst MATCH_SRC = /vimeo\\.com\\/(?:video\\/|event\\/)?(\\d+)(?:\\/([\\w-]+))?/;\nfunction getTemplateHTML(attrs, props = {}) {\n  const iframeAttrs = {\n    src: serializeIframeUrl(attrs, props),\n    frameborder: 0,\n    width: \"100%\",\n    height: \"100%\",\n    allow: \"accelerometer; fullscreen; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n  };\n  if (props.config) {\n    iframeAttrs[\"data-config\"] = JSON.stringify(props.config);\n  }\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-block;\n        min-width: 300px;\n        min-height: 150px;\n        position: relative;\n      }\n      iframe {\n        position: absolute;\n        top: 0;\n        left: 0;\n      }\n      :host(:not([controls])) {\n        pointer-events: none;\n      }\n    </style>\n    <iframe${serializeAttributes(iframeAttrs)}></iframe>\n  `\n  );\n}\nfunction serializeIframeUrl(attrs, props) {\n  if (!attrs.src) return;\n  const matches = attrs.src.match(MATCH_SRC);\n  const srcId = matches && matches[1];\n  const hParam = matches && matches[2];\n  const params = {\n    // ?controls=true is enabled by default in the iframe\n    controls: attrs.controls === \"\" ? null : 0,\n    autoplay: attrs.autoplay,\n    loop: attrs.loop,\n    muted: attrs.muted,\n    playsinline: attrs.playsinline,\n    preload: attrs.preload ?? \"metadata\",\n    transparent: false,\n    autopause: attrs.autopause,\n    h: hParam,\n    // This param is required when the video is Unlisted.\n    ...props.config\n  };\n  return `${EMBED_BASE}/${srcId}?${serialize(params)}`;\n}\nclass VimeoVideoElement extends (globalThis.HTMLElement ?? class {\n}) {\n  static getTemplateHTML = getTemplateHTML;\n  static shadowRootOptions = { mode: \"open\" };\n  static observedAttributes = [\n    \"autoplay\",\n    \"controls\",\n    \"crossorigin\",\n    \"loop\",\n    \"muted\",\n    \"playsinline\",\n    \"poster\",\n    \"preload\",\n    \"src\"\n  ];\n  loadComplete = new PublicPromise();\n  #loadRequested;\n  #hasLoaded;\n  #isInit;\n  #currentTime = 0;\n  #duration = NaN;\n  #muted = false;\n  #paused = !this.autoplay;\n  #playbackRate = 1;\n  #progress = 0;\n  #readyState = 0;\n  #seeking = false;\n  #volume = 1;\n  #videoWidth = NaN;\n  #videoHeight = NaN;\n  #config = null;\n  constructor() {\n    super();\n    this.#upgradeProperty(\"config\");\n  }\n  requestFullscreen() {\n    var _a, _b;\n    return (_b = (_a = this.api) == null ? void 0 : _a.requestFullscreen) == null ? void 0 : _b.call(_a);\n  }\n  exitFullscreen() {\n    var _a, _b;\n    return (_b = (_a = this.api) == null ? void 0 : _a.exitFullscreen) == null ? void 0 : _b.call(_a);\n  }\n  requestPictureInPicture() {\n    var _a, _b;\n    return (_b = (_a = this.api) == null ? void 0 : _a.requestPictureInPicture) == null ? void 0 : _b.call(_a);\n  }\n  exitPictureInPicture() {\n    var _a, _b;\n    return (_b = (_a = this.api) == null ? void 0 : _a.exitPictureInPicture) == null ? void 0 : _b.call(_a);\n  }\n  get config() {\n    return this.#config;\n  }\n  set config(value) {\n    this.#config = value;\n  }\n  async load() {\n    var _a;\n    if (this.#loadRequested) return;\n    const isFirstLoad = !this.#hasLoaded;\n    if (this.#hasLoaded) this.loadComplete = new PublicPromise();\n    this.#hasLoaded = true;\n    await (this.#loadRequested = Promise.resolve());\n    this.#loadRequested = null;\n    this.#currentTime = 0;\n    this.#duration = NaN;\n    this.#muted = false;\n    this.#paused = !this.autoplay;\n    this.#playbackRate = 1;\n    this.#progress = 0;\n    this.#readyState = 0;\n    this.#seeking = false;\n    this.#volume = 1;\n    this.#readyState = 0;\n    this.#videoWidth = NaN;\n    this.#videoHeight = NaN;\n    this.dispatchEvent(new Event(\"emptied\"));\n    let oldApi = this.api;\n    this.api = null;\n    if (!this.src) {\n      return;\n    }\n    this.dispatchEvent(new Event(\"loadstart\"));\n    const options = {\n      autoplay: this.autoplay,\n      controls: this.controls,\n      loop: this.loop,\n      muted: this.defaultMuted,\n      playsinline: this.playsInline,\n      preload: this.preload ?? \"metadata\",\n      transparent: false,\n      autopause: this.hasAttribute(\"autopause\"),\n      ...this.#config\n    };\n    const onLoaded = async () => {\n      this.#readyState = 1;\n      this.dispatchEvent(new Event(\"loadedmetadata\"));\n      if (this.api) {\n        this.#muted = await this.api.getMuted();\n        this.#volume = await this.api.getVolume();\n        this.dispatchEvent(new Event(\"volumechange\"));\n        this.#duration = await this.api.getDuration();\n        this.dispatchEvent(new Event(\"durationchange\"));\n      }\n      this.dispatchEvent(new Event(\"loadcomplete\"));\n      this.loadComplete.resolve();\n    };\n    if (this.#isInit) {\n      this.api = oldApi;\n      await this.api.loadVideo({\n        ...options,\n        url: this.src\n      });\n      await onLoaded();\n      await this.loadComplete;\n      return;\n    }\n    this.#isInit = true;\n    let iframe = (_a = this.shadowRoot) == null ? void 0 : _a.querySelector(\"iframe\");\n    if (isFirstLoad && iframe) {\n      this.#config = JSON.parse(iframe.getAttribute(\"data-config\") || \"{}\");\n    }\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: \"open\" });\n      this.shadowRoot.innerHTML = getTemplateHTML(namedNodeMapToObject(this.attributes), this);\n      iframe = this.shadowRoot.querySelector(\"iframe\");\n    }\n    this.api = new _vimeo_player_dist_player_es_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](iframe);\n    const onceLoaded = () => {\n      this.api.off(\"loaded\", onceLoaded);\n      onLoaded();\n    };\n    this.api.on(\"loaded\", onceLoaded);\n    this.api.on(\"bufferstart\", () => {\n      if (this.#paused) {\n        this.#paused = false;\n        this.dispatchEvent(new Event(\"play\"));\n      }\n      this.dispatchEvent(new Event(\"waiting\"));\n    });\n    this.api.on(\"play\", () => {\n      if (!this.#paused) return;\n      this.#paused = false;\n      this.dispatchEvent(new Event(\"play\"));\n    });\n    this.api.on(\"playing\", () => {\n      this.#readyState = 3;\n      this.#paused = false;\n      this.dispatchEvent(new Event(\"playing\"));\n    });\n    this.api.on(\"seeking\", () => {\n      this.#seeking = true;\n      this.dispatchEvent(new Event(\"seeking\"));\n    });\n    this.api.on(\"seeked\", () => {\n      this.#seeking = false;\n      this.dispatchEvent(new Event(\"seeked\"));\n    });\n    this.api.on(\"pause\", () => {\n      this.#paused = true;\n      this.dispatchEvent(new Event(\"pause\"));\n    });\n    this.api.on(\"ended\", () => {\n      this.#paused = true;\n      this.dispatchEvent(new Event(\"ended\"));\n    });\n    this.api.on(\"ratechange\", ({ playbackRate }) => {\n      this.#playbackRate = playbackRate;\n      this.dispatchEvent(new Event(\"ratechange\"));\n    });\n    this.api.on(\"volumechange\", async ({ volume }) => {\n      this.#volume = volume;\n      if (this.api) {\n        this.#muted = await this.api.getMuted();\n      }\n      this.dispatchEvent(new Event(\"volumechange\"));\n    });\n    this.api.on(\"durationchange\", ({ duration }) => {\n      this.#duration = duration;\n      this.dispatchEvent(new Event(\"durationchange\"));\n    });\n    this.api.on(\"timeupdate\", ({ seconds }) => {\n      this.#currentTime = seconds;\n      this.dispatchEvent(new Event(\"timeupdate\"));\n    });\n    this.api.on(\"progress\", ({ seconds }) => {\n      this.#progress = seconds;\n      this.dispatchEvent(new Event(\"progress\"));\n    });\n    this.api.on(\"resize\", ({ videoWidth, videoHeight }) => {\n      this.#videoWidth = videoWidth;\n      this.#videoHeight = videoHeight;\n      this.dispatchEvent(new Event(\"resize\"));\n    });\n    await this.loadComplete;\n  }\n  async attributeChangedCallback(attrName, oldValue, newValue) {\n    if (oldValue === newValue) return;\n    switch (attrName) {\n      case \"autoplay\":\n      case \"controls\":\n      case \"src\": {\n        this.load();\n        return;\n      }\n    }\n    await this.loadComplete;\n    switch (attrName) {\n      case \"loop\": {\n        this.api.setLoop(this.loop);\n        break;\n      }\n    }\n  }\n  async play() {\n    var _a;\n    this.#paused = false;\n    this.dispatchEvent(new Event(\"play\"));\n    await this.loadComplete;\n    try {\n      await ((_a = this.api) == null ? void 0 : _a.play());\n    } catch (error) {\n      this.#paused = true;\n      this.dispatchEvent(new Event(\"pause\"));\n      throw error;\n    }\n  }\n  async pause() {\n    var _a;\n    await this.loadComplete;\n    return (_a = this.api) == null ? void 0 : _a.pause();\n  }\n  get ended() {\n    return this.#currentTime >= this.#duration;\n  }\n  get seeking() {\n    return this.#seeking;\n  }\n  get readyState() {\n    return this.#readyState;\n  }\n  get videoWidth() {\n    return this.#videoWidth;\n  }\n  get videoHeight() {\n    return this.#videoHeight;\n  }\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n  set src(val) {\n    if (this.src == val) return;\n    this.setAttribute(\"src\", val);\n  }\n  get paused() {\n    return this.#paused;\n  }\n  get duration() {\n    return this.#duration;\n  }\n  get autoplay() {\n    return this.hasAttribute(\"autoplay\");\n  }\n  set autoplay(val) {\n    if (this.autoplay == val) return;\n    this.toggleAttribute(\"autoplay\", Boolean(val));\n  }\n  get buffered() {\n    if (this.#progress > 0) {\n      return createTimeRanges(0, this.#progress);\n    }\n    return createTimeRanges();\n  }\n  get controls() {\n    return this.hasAttribute(\"controls\");\n  }\n  set controls(val) {\n    if (this.controls == val) return;\n    this.toggleAttribute(\"controls\", Boolean(val));\n  }\n  get currentTime() {\n    return this.#currentTime;\n  }\n  set currentTime(val) {\n    if (this.currentTime == val) return;\n    this.#currentTime = val;\n    this.loadComplete.then(() => {\n      var _a;\n      (_a = this.api) == null ? void 0 : _a.setCurrentTime(val).catch(() => {\n      });\n    });\n  }\n  get defaultMuted() {\n    return this.hasAttribute(\"muted\");\n  }\n  set defaultMuted(val) {\n    if (this.defaultMuted == val) return;\n    this.toggleAttribute(\"muted\", Boolean(val));\n  }\n  get loop() {\n    return this.hasAttribute(\"loop\");\n  }\n  set loop(val) {\n    if (this.loop == val) return;\n    this.toggleAttribute(\"loop\", Boolean(val));\n  }\n  get muted() {\n    return this.#muted;\n  }\n  set muted(val) {\n    if (this.muted == val) return;\n    this.#muted = val;\n    this.loadComplete.then(() => {\n      var _a;\n      (_a = this.api) == null ? void 0 : _a.setMuted(val).catch(() => {\n      });\n    });\n  }\n  get playbackRate() {\n    return this.#playbackRate;\n  }\n  set playbackRate(val) {\n    if (this.playbackRate == val) return;\n    this.#playbackRate = val;\n    this.loadComplete.then(() => {\n      var _a;\n      (_a = this.api) == null ? void 0 : _a.setPlaybackRate(val).catch(() => {\n      });\n    });\n  }\n  get playsInline() {\n    return this.hasAttribute(\"playsinline\");\n  }\n  set playsInline(val) {\n    if (this.playsInline == val) return;\n    this.toggleAttribute(\"playsinline\", Boolean(val));\n  }\n  get poster() {\n    return this.getAttribute(\"poster\");\n  }\n  set poster(val) {\n    if (this.poster == val) return;\n    this.setAttribute(\"poster\", `${val}`);\n  }\n  get volume() {\n    return this.#volume;\n  }\n  set volume(val) {\n    if (this.volume == val) return;\n    this.#volume = val;\n    this.loadComplete.then(() => {\n      var _a;\n      (_a = this.api) == null ? void 0 : _a.setVolume(val).catch(() => {\n      });\n    });\n  }\n  // This is a pattern to update property values that are set before\n  // the custom element is upgraded.\n  // https://web.dev/custom-elements-best-practices/#make-properties-lazy\n  #upgradeProperty(prop) {\n    if (Object.prototype.hasOwnProperty.call(this, prop)) {\n      const value = this[prop];\n      delete this[prop];\n      this[prop] = value;\n    }\n  }\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    const value = attrs[key];\n    if (value === \"\") html += ` ${escapeHtml(key)}`;\n    else html += ` ${escapeHtml(key)}=\"${escapeHtml(`${value}`)}\"`;\n  }\n  return html;\n}\nfunction escapeHtml(str) {\n  return str.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&apos;\").replace(/`/g, \"&#x60;\");\n}\nfunction serialize(props) {\n  return String(new URLSearchParams(boolToBinary(props)));\n}\nfunction boolToBinary(props) {\n  let p = {};\n  for (let key in props) {\n    let val = props[key];\n    if (val === true || val === \"\") p[key] = 1;\n    else if (val === false) p[key] = 0;\n    else if (val != null) p[key] = val;\n  }\n  return p;\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  let obj = {};\n  for (let attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nclass PublicPromise extends Promise {\n  constructor(executor = () => {\n  }) {\n    let res, rej;\n    super((resolve, reject) => {\n      executor(resolve, reject);\n      res = resolve;\n      rej = reject;\n    });\n    this.resolve = res;\n    this.reject = rej;\n  }\n}\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start == null || end == null || start === 0 && end === 0) {\n    return createTimeRangesObj([[0, 0]]);\n  }\n  return createTimeRangesObj([[start, end]]);\n}\nfunction createTimeRangesObj(ranges) {\n  Object.defineProperties(ranges, {\n    start: {\n      value: (i) => ranges[i][0]\n    },\n    end: {\n      value: (i) => ranges[i][1]\n    }\n  });\n  return ranges;\n}\nif (globalThis.customElements && !globalThis.customElements.get(\"vimeo-video\")) {\n  globalThis.customElements.define(\"vimeo-video\", VimeoVideoElement);\n}\nvar vimeo_video_element_default = VimeoVideoElement;\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/vimeo-video-element/dist/vimeo-video-element.js\n");

/***/ })

};
;
"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/oblivious-set";
exports.ids = ["vendor-chunks/oblivious-set"];
exports.modules = {

/***/ "(ssr)/./node_modules/oblivious-set/dist/esm/src/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/oblivious-set/dist/esm/src/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ObliviousSet: () => (/* binding */ ObliviousSet),\n/* harmony export */   now: () => (/* binding */ now),\n/* harmony export */   removeTooOldValues: () => (/* binding */ removeTooOldValues)\n/* harmony export */ });\n/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nclass ObliviousSet {\n    ttl;\n    map = new Map();\n    /**\n     * Creating calls to setTimeout() is expensive,\n     * so we only do that if there is not timeout already open.\n     */\n    _to = false;\n    constructor(ttl) {\n        this.ttl = ttl;\n    }\n    has(value) {\n        return this.map.has(value);\n    }\n    add(value) {\n        this.map.set(value, now());\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(() => {\n                this._to = false;\n                removeTooOldValues(this);\n            }, 0);\n        }\n    }\n    clear() {\n        this.map.clear();\n    }\n}\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nfunction removeTooOldValues(obliviousSet) {\n    const olderThen = now() - obliviousSet.ttl;\n    const iterator = obliviousSet.map[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        const next = iterator.next().value;\n        if (!next) {\n            return; // no more elements\n        }\n        const value = next[0];\n        const time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nfunction now() {\n    return Date.now();\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvb2JsaXZpb3VzLXNldC9kaXN0L2VzbS9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXExWUyAwNiBEZXZcXERlc2t0b3BcXHByb2pldG9zbm9kZWpzXFx0ZXN0ZVxcbm9kZV9tb2R1bGVzXFxvYmxpdmlvdXMtc2V0XFxkaXN0XFxlc21cXHNyY1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiB0aGlzIGlzIGEgc2V0IHdoaWNoIGF1dG9tYXRpY2FsbHkgZm9yZ2V0c1xuICogYSBnaXZlbiBlbnRyeSB3aGVuIGEgbmV3IGVudHJ5IGlzIHNldCBhbmQgdGhlIHR0bFxuICogb2YgdGhlIG9sZCBvbmUgaXMgb3ZlclxuICovXG5leHBvcnQgY2xhc3MgT2JsaXZpb3VzU2V0IHtcbiAgICB0dGw7XG4gICAgbWFwID0gbmV3IE1hcCgpO1xuICAgIC8qKlxuICAgICAqIENyZWF0aW5nIGNhbGxzIHRvIHNldFRpbWVvdXQoKSBpcyBleHBlbnNpdmUsXG4gICAgICogc28gd2Ugb25seSBkbyB0aGF0IGlmIHRoZXJlIGlzIG5vdCB0aW1lb3V0IGFscmVhZHkgb3Blbi5cbiAgICAgKi9cbiAgICBfdG8gPSBmYWxzZTtcbiAgICBjb25zdHJ1Y3Rvcih0dGwpIHtcbiAgICAgICAgdGhpcy50dGwgPSB0dGw7XG4gICAgfVxuICAgIGhhcyh2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAuaGFzKHZhbHVlKTtcbiAgICB9XG4gICAgYWRkKHZhbHVlKSB7XG4gICAgICAgIHRoaXMubWFwLnNldCh2YWx1ZSwgbm93KCkpO1xuICAgICAgICAvKipcbiAgICAgICAgICogV2hlbiBhIG5ldyB2YWx1ZSBpcyBhZGRlZCxcbiAgICAgICAgICogc3RhcnQgdGhlIGNsZWFudXAgYXQgdGhlIG5leHQgdGlja1xuICAgICAgICAgKiB0byBub3QgYmxvY2sgdGhlIGNwdSBmb3IgbW9yZSBpbXBvcnRhbnQgc3R1ZmZcbiAgICAgICAgICogdGhhdCBtaWdodCBoYXBwZW4uXG4gICAgICAgICAqL1xuICAgICAgICBpZiAoIXRoaXMuX3RvKSB7XG4gICAgICAgICAgICB0aGlzLl90byA9IHRydWU7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl90byA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJlbW92ZVRvb09sZFZhbHVlcyh0aGlzKTtcbiAgICAgICAgICAgIH0sIDApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNsZWFyKCkge1xuICAgICAgICB0aGlzLm1hcC5jbGVhcigpO1xuICAgIH1cbn1cbi8qKlxuICogUmVtb3ZlcyBhbGwgZW50cmllcyBmcm9tIHRoZSBzZXRcbiAqIHdoZXJlIHRoZSBUVEwgaGFzIGV4cGlyZWRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVRvb09sZFZhbHVlcyhvYmxpdmlvdXNTZXQpIHtcbiAgICBjb25zdCBvbGRlclRoZW4gPSBub3coKSAtIG9ibGl2aW91c1NldC50dGw7XG4gICAgY29uc3QgaXRlcmF0b3IgPSBvYmxpdmlvdXNTZXQubWFwW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICAvKipcbiAgICAgKiBCZWNhdXNlIHdlIGNhbiBhc3N1bWUgdGhlIG5ldyB2YWx1ZXMgYXJlIGFkZGVkIGF0IHRoZSBib3R0b20sXG4gICAgICogd2Ugc3RhcnQgZnJvbSB0aGUgdG9wIGFuZCBzdG9wIGFzIHNvb24gYXMgd2UgcmVhY2ggYSBub24tdG9vLW9sZCB2YWx1ZS5cbiAgICAgKi9cbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBjb25zdCBuZXh0ID0gaXRlcmF0b3IubmV4dCgpLnZhbHVlO1xuICAgICAgICBpZiAoIW5leHQpIHtcbiAgICAgICAgICAgIHJldHVybjsgLy8gbm8gbW9yZSBlbGVtZW50c1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlID0gbmV4dFswXTtcbiAgICAgICAgY29uc3QgdGltZSA9IG5leHRbMV07XG4gICAgICAgIGlmICh0aW1lIDwgb2xkZXJUaGVuKSB7XG4gICAgICAgICAgICBvYmxpdmlvdXNTZXQubWFwLmRlbGV0ZSh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBXZSByZWFjaGVkIGEgdmFsdWUgdGhhdCBpcyBub3Qgb2xkIGVub3VnaFxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIG5vdygpIHtcbiAgICByZXR1cm4gRGF0ZS5ub3coKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/oblivious-set/dist/esm/src/index.js\n");

/***/ })

};
;
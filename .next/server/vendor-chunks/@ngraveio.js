"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@ngraveio";
exports.ids = ["vendor-chunks/@ngraveio"];
exports.modules = {

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/bytewords.js":
/*!********************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/bytewords.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"assert\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst bytewords = 'ableacidalsoapexaquaarchatomauntawayaxisbackbaldbarnbeltbetabiasbluebodybragbrewbulbbuzzcalmcashcatschefcityclawcodecolacookcostcruxcurlcuspcyandarkdatadaysdelidicedietdoordowndrawdropdrumdulldutyeacheasyechoedgeepicevenexamexiteyesfactfairfernfigsfilmfishfizzflapflewfluxfoxyfreefrogfuelfundgalagamegeargemsgiftgirlglowgoodgraygrimgurugushgyrohalfhanghardhawkheathelphighhillholyhopehornhutsicedideaidleinchinkyintoirisironitemjadejazzjoinjoltjowljudojugsjumpjunkjurykeepkenokeptkeyskickkilnkingkitekiwiknoblamblavalazyleaflegsliarlimplionlistlogoloudloveluaulucklungmainmanymathmazememomenumeowmildmintmissmonknailnavyneednewsnextnoonnotenumbobeyoboeomitonyxopenovalowlspaidpartpeckplaypluspoempoolposepuffpumapurrquadquizraceramprealredorichroadrockroofrubyruinrunsrustsafesagascarsetssilkskewslotsoapsolosongstubsurfswantacotasktaxitenttiedtimetinytoiltombtoystriptunatwinuglyundouniturgeuservastveryvetovialvibeviewvisavoidvowswallwandwarmwaspwavewaxywebswhatwhenwhizwolfworkyankyawnyellyogayurtzapszerozestzinczonezoom';\nlet bytewordsLookUpTable = [];\nconst BYTEWORDS_NUM = 256;\nconst BYTEWORD_LENGTH = 4;\nconst MINIMAL_BYTEWORD_LENGTH = 2;\nvar STYLES;\n(function (STYLES) {\n    STYLES[\"STANDARD\"] = \"standard\";\n    STYLES[\"URI\"] = \"uri\";\n    STYLES[\"MINIMAL\"] = \"minimal\";\n})(STYLES || (STYLES = {}));\nconst getWord = (index) => {\n    return bytewords.slice(index * BYTEWORD_LENGTH, (index * BYTEWORD_LENGTH) + BYTEWORD_LENGTH);\n};\nconst getMinimalWord = (index) => {\n    const byteword = getWord(index);\n    return `${byteword[0]}${byteword[BYTEWORD_LENGTH - 1]}`;\n};\nconst addCRC = (string) => {\n    const crc = utils_1.getCRCHex(Buffer.from(string, 'hex'));\n    return `${string}${crc}`;\n};\nconst encodeWithSeparator = (word, separator) => {\n    const crcAppendedWord = addCRC(word);\n    const crcWordBuff = Buffer.from(crcAppendedWord, 'hex');\n    const result = crcWordBuff.reduce((result, w) => ([...result, getWord(w)]), []);\n    return result.join(separator);\n};\nconst encodeMinimal = (word) => {\n    const crcAppendedWord = addCRC(word);\n    const crcWordBuff = Buffer.from(crcAppendedWord, 'hex');\n    const result = crcWordBuff.reduce((result, w) => result + getMinimalWord(w), '');\n    return result;\n};\nconst decodeWord = (word, wordLength) => {\n    assert_1.default(word.length === wordLength, 'Invalid Bytewords: word.length does not match wordLength provided');\n    const dim = 26;\n    // Since the first and last letters of each Byteword are unique,\n    // we can use them as indexes into a two-dimensional lookup table.\n    // This table is generated lazily.\n    if (bytewordsLookUpTable.length === 0) {\n        const array_len = dim * dim;\n        bytewordsLookUpTable = [...new Array(array_len)].map(() => -1);\n        for (let i = 0; i < BYTEWORDS_NUM; i++) {\n            const byteword = getWord(i);\n            let x = byteword[0].charCodeAt(0) - 'a'.charCodeAt(0);\n            let y = byteword[3].charCodeAt(0) - 'a'.charCodeAt(0);\n            let offset = y * dim + x;\n            bytewordsLookUpTable[offset] = i;\n        }\n    }\n    // If the coordinates generated by the first and last letters are out of bounds,\n    // or the lookup table contains -1 at the coordinates, then the word is not valid.\n    let x = (word[0]).toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0);\n    let y = (word[wordLength == 4 ? 3 : 1]).toLowerCase().charCodeAt(0) - 'a'.charCodeAt(0);\n    assert_1.default(0 <= x && x < dim && 0 <= y && y < dim, 'Invalid Bytewords: invalid word');\n    let offset = y * dim + x;\n    let value = bytewordsLookUpTable[offset];\n    assert_1.default(value !== -1, 'Invalid Bytewords: value not in lookup table');\n    // If we're decoding a full four-letter word, verify that the two middle letters are correct.\n    if (wordLength == BYTEWORD_LENGTH) {\n        const byteword = getWord(value);\n        let c1 = word[1].toLowerCase();\n        let c2 = word[2].toLowerCase();\n        assert_1.default(c1 === byteword[1] && c2 === byteword[2], 'Invalid Bytewords: invalid middle letters of word');\n    }\n    // Successful decode.\n    return Buffer.from([value]).toString('hex');\n};\nconst _decode = (string, separator, wordLength) => {\n    const words = wordLength == BYTEWORD_LENGTH ? string.split(separator) : utils_1.partition(string, 2);\n    const decodedString = words.map((word) => decodeWord(word, wordLength)).join('');\n    assert_1.default(decodedString.length >= 5, 'Invalid Bytewords: invalid decoded string length');\n    const [body, bodyChecksum] = utils_1.split(Buffer.from(decodedString, 'hex'), 4);\n    const checksum = utils_1.getCRCHex(body); // convert to hex\n    assert_1.default(checksum === bodyChecksum.toString('hex'), 'Invalid Checksum');\n    return body.toString('hex');\n};\nconst decode = (string, style = STYLES.MINIMAL) => {\n    switch (style) {\n        case STYLES.STANDARD:\n            return _decode(string, ' ', BYTEWORD_LENGTH);\n        case STYLES.URI:\n            return _decode(string, '-', BYTEWORD_LENGTH);\n        case STYLES.MINIMAL:\n            return _decode(string, '', MINIMAL_BYTEWORD_LENGTH);\n        default:\n            throw new Error(`Invalid style ${style}`);\n    }\n};\nconst encode = (string, style = STYLES.MINIMAL) => {\n    switch (style) {\n        case STYLES.STANDARD:\n            return encodeWithSeparator(string, ' ');\n        case STYLES.URI:\n            return encodeWithSeparator(string, '-');\n        case STYLES.MINIMAL:\n            return encodeMinimal(string);\n        default:\n            throw new Error(`Invalid style ${style}`);\n    }\n};\nexports[\"default\"] = {\n    decode,\n    encode,\n    STYLES\n};\n//# sourceMappingURL=bytewords.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/bytewords.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/cbor.js":
/*!***************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/cbor.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.cborDecode = exports.cborEncode = void 0;\nconst cbor = __webpack_require__(/*! cbor-sync */ \"(ssr)/./node_modules/cbor-sync/main.js\");\nconst cborEncode = (data) => {\n    return cbor.encode(data);\n};\nexports.cborEncode = cborEncode;\nconst cborDecode = (data) => {\n    return cbor.decode(Buffer.isBuffer(data) ? data : Buffer.from(data, 'hex'));\n};\nexports.cborDecode = cborDecode;\n//# sourceMappingURL=cbor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvY2Jvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxrQkFBa0I7QUFDdkMsYUFBYSxtQkFBTyxDQUFDLHlEQUFXO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcTFZTIDA2IERldlxcRGVza3RvcFxccHJvamV0b3Nub2RlanNcXHRlc3RlXFxub2RlX21vZHVsZXNcXEBuZ3JhdmVpb1xcYmMtdXJcXGRpc3RcXGNib3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNib3JEZWNvZGUgPSBleHBvcnRzLmNib3JFbmNvZGUgPSB2b2lkIDA7XG5jb25zdCBjYm9yID0gcmVxdWlyZSgnY2Jvci1zeW5jJyk7XG5jb25zdCBjYm9yRW5jb2RlID0gKGRhdGEpID0+IHtcbiAgICByZXR1cm4gY2Jvci5lbmNvZGUoZGF0YSk7XG59O1xuZXhwb3J0cy5jYm9yRW5jb2RlID0gY2JvckVuY29kZTtcbmNvbnN0IGNib3JEZWNvZGUgPSAoZGF0YSkgPT4ge1xuICAgIHJldHVybiBjYm9yLmRlY29kZShCdWZmZXIuaXNCdWZmZXIoZGF0YSkgPyBkYXRhIDogQnVmZmVyLmZyb20oZGF0YSwgJ2hleCcpKTtcbn07XG5leHBvcnRzLmNib3JEZWNvZGUgPSBjYm9yRGVjb2RlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2Jvci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/cbor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/errors.js":
/*!*****************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/errors.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.InvalidChecksumError = exports.InvalidSequenceComponentError = exports.InvalidTypeError = exports.InvalidPathLengthError = exports.InvalidSchemeError = void 0;\nclass InvalidSchemeError extends Error {\n    constructor() {\n        super('Invalid Scheme');\n        this.name = 'InvalidSchemeError';\n    }\n}\nexports.InvalidSchemeError = InvalidSchemeError;\nclass InvalidPathLengthError extends Error {\n    constructor() {\n        super('Invalid Path');\n        this.name = 'InvalidPathLengthError';\n    }\n}\nexports.InvalidPathLengthError = InvalidPathLengthError;\nclass InvalidTypeError extends Error {\n    constructor() {\n        super('Invalid Type');\n        this.name = 'InvalidTypeError';\n    }\n}\nexports.InvalidTypeError = InvalidTypeError;\nclass InvalidSequenceComponentError extends Error {\n    constructor() {\n        super('Invalid Sequence Component');\n        this.name = 'InvalidSequenceComponentError';\n    }\n}\nexports.InvalidSequenceComponentError = InvalidSequenceComponentError;\nclass InvalidChecksumError extends Error {\n    constructor() {\n        super('Invalid Checksum');\n        this.name = 'InvalidChecksumError';\n    }\n}\nexports.InvalidChecksumError = InvalidChecksumError;\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvZXJyb3JzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QixHQUFHLHFDQUFxQyxHQUFHLHdCQUF3QixHQUFHLDhCQUE4QixHQUFHLDBCQUEwQjtBQUM3SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCO0FBQzVCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXExWUyAwNiBEZXZcXERlc2t0b3BcXHByb2pldG9zbm9kZWpzXFx0ZXN0ZVxcbm9kZV9tb2R1bGVzXFxAbmdyYXZlaW9cXGJjLXVyXFxkaXN0XFxlcnJvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkludmFsaWRDaGVja3N1bUVycm9yID0gZXhwb3J0cy5JbnZhbGlkU2VxdWVuY2VDb21wb25lbnRFcnJvciA9IGV4cG9ydHMuSW52YWxpZFR5cGVFcnJvciA9IGV4cG9ydHMuSW52YWxpZFBhdGhMZW5ndGhFcnJvciA9IGV4cG9ydHMuSW52YWxpZFNjaGVtZUVycm9yID0gdm9pZCAwO1xuY2xhc3MgSW52YWxpZFNjaGVtZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignSW52YWxpZCBTY2hlbWUnKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0ludmFsaWRTY2hlbWVFcnJvcic7XG4gICAgfVxufVxuZXhwb3J0cy5JbnZhbGlkU2NoZW1lRXJyb3IgPSBJbnZhbGlkU2NoZW1lRXJyb3I7XG5jbGFzcyBJbnZhbGlkUGF0aExlbmd0aEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignSW52YWxpZCBQYXRoJyk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdJbnZhbGlkUGF0aExlbmd0aEVycm9yJztcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRQYXRoTGVuZ3RoRXJyb3IgPSBJbnZhbGlkUGF0aExlbmd0aEVycm9yO1xuY2xhc3MgSW52YWxpZFR5cGVFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0ludmFsaWQgVHlwZScpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnSW52YWxpZFR5cGVFcnJvcic7XG4gICAgfVxufVxuZXhwb3J0cy5JbnZhbGlkVHlwZUVycm9yID0gSW52YWxpZFR5cGVFcnJvcjtcbmNsYXNzIEludmFsaWRTZXF1ZW5jZUNvbXBvbmVudEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcignSW52YWxpZCBTZXF1ZW5jZSBDb21wb25lbnQnKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0ludmFsaWRTZXF1ZW5jZUNvbXBvbmVudEVycm9yJztcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRTZXF1ZW5jZUNvbXBvbmVudEVycm9yID0gSW52YWxpZFNlcXVlbmNlQ29tcG9uZW50RXJyb3I7XG5jbGFzcyBJbnZhbGlkQ2hlY2tzdW1FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoJ0ludmFsaWQgQ2hlY2tzdW0nKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0ludmFsaWRDaGVja3N1bUVycm9yJztcbiAgICB9XG59XG5leHBvcnRzLkludmFsaWRDaGVja3N1bUVycm9yID0gSW52YWxpZENoZWNrc3VtRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1lcnJvcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FountainDecoderPart = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst fountainUtils_1 = __webpack_require__(/*! ./fountainUtils */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainUtils.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/errors.js\");\nclass FountainDecoderPart {\n    constructor(_indexes, _fragment) {\n        this._indexes = _indexes;\n        this._fragment = _fragment;\n    }\n    get indexes() { return this._indexes; }\n    get fragment() { return this._fragment; }\n    static fromEncoderPart(encoderPart) {\n        const indexes = fountainUtils_1.chooseFragments(encoderPart.seqNum, encoderPart.seqLength, encoderPart.checksum);\n        const fragment = encoderPart.fragment;\n        return new FountainDecoderPart(indexes, fragment);\n    }\n    isSimple() {\n        return this.indexes.length === 1;\n    }\n}\nexports.FountainDecoderPart = FountainDecoderPart;\nclass FountainDecoder {\n    constructor() {\n        this.result = undefined;\n        this.expectedMessageLength = 0;\n        this.expectedChecksum = 0;\n        this.expectedFragmentLength = 0;\n        this.processedPartsCount = 0;\n        this.expectedPartIndexes = [];\n        this.lastPartIndexes = [];\n        this.queuedParts = [];\n        this.receivedPartIndexes = [];\n        this.mixedParts = [];\n        this.simpleParts = [];\n    }\n    validatePart(part) {\n        // If this is the first part we've seen\n        if (this.expectedPartIndexes.length === 0) {\n            // Record the things that all the other parts we see will have to match to be valid.\n            [...new Array(part.seqLength)]\n                .forEach((_, index) => this.expectedPartIndexes.push(index));\n            this.expectedMessageLength = part.messageLength;\n            this.expectedChecksum = part.checksum;\n            this.expectedFragmentLength = part.fragment.length;\n        }\n        else {\n            // If this part's values don't match the first part's values, throw away the part\n            if (this.expectedPartIndexes.length !== part.seqLength) {\n                return false;\n            }\n            if (this.expectedMessageLength !== part.messageLength) {\n                return false;\n            }\n            if (this.expectedChecksum !== part.checksum) {\n                return false;\n            }\n            if (this.expectedFragmentLength !== part.fragment.length) {\n                return false;\n            }\n        }\n        // This part should be processed\n        return true;\n    }\n    reducePartByPart(a, b) {\n        // If the fragments mixed into `b` are a strict (proper) subset of those in `a`...\n        if (utils_1.arrayContains(a.indexes, b.indexes)) {\n            const newIndexes = utils_1.setDifference(a.indexes, b.indexes);\n            const newFragment = utils_1.bufferXOR(a.fragment, b.fragment);\n            return new FountainDecoderPart(newIndexes, newFragment);\n        }\n        else {\n            // `a` is not reducable by `b`, so return a\n            return a;\n        }\n    }\n    reduceMixedBy(part) {\n        const newMixed = [];\n        this.mixedParts\n            .map(({ value: mixedPart }) => this.reducePartByPart(mixedPart, part))\n            .forEach(reducedPart => {\n            if (reducedPart.isSimple()) {\n                this.queuedParts.push(reducedPart);\n            }\n            else {\n                newMixed.push({ key: reducedPart.indexes, value: reducedPart });\n            }\n        });\n        this.mixedParts = newMixed;\n    }\n    processSimplePart(part) {\n        // Don't process duplicate parts\n        const fragmentIndex = part.indexes[0];\n        if (this.receivedPartIndexes.includes(fragmentIndex)) {\n            return;\n        }\n        this.simpleParts.push({ key: part.indexes, value: part });\n        this.receivedPartIndexes.push(fragmentIndex);\n        // If we've received all the parts\n        if (utils_1.arraysEqual(this.receivedPartIndexes, this.expectedPartIndexes)) {\n            // Reassemble the message from its fragments\n            const sortedParts = this.simpleParts\n                .map(({ value }) => value)\n                .sort((a, b) => (a.indexes[0] - b.indexes[0]));\n            const message = FountainDecoder.joinFragments(sortedParts.map(part => part.fragment), this.expectedMessageLength);\n            const checksum = utils_1.getCRC(message);\n            if (checksum === this.expectedChecksum) {\n                this.result = message;\n            }\n            else {\n                this.error = new errors_1.InvalidChecksumError();\n            }\n        }\n        else {\n            this.reduceMixedBy(part);\n        }\n    }\n    processMixedPart(part) {\n        // Don't process duplicate parts\n        if (this.mixedParts.some(({ key: indexes }) => utils_1.arraysEqual(indexes, part.indexes))) {\n            return;\n        }\n        // Reduce this part by all the others\n        let p2 = this.simpleParts.reduce((acc, { value: p }) => this.reducePartByPart(acc, p), part);\n        p2 = this.mixedParts.reduce((acc, { value: p }) => this.reducePartByPart(acc, p), p2);\n        // If the part is now simple\n        if (p2.isSimple()) {\n            // Add it to the queue\n            this.queuedParts.push(p2);\n        }\n        else {\n            this.reduceMixedBy(p2);\n            this.mixedParts.push({ key: p2.indexes, value: p2 });\n        }\n    }\n    processQueuedItem() {\n        if (this.queuedParts.length === 0) {\n            return;\n        }\n        const part = this.queuedParts.shift();\n        if (part.isSimple()) {\n            this.processSimplePart(part);\n        }\n        else {\n            this.processMixedPart(part);\n        }\n    }\n    receivePart(encoderPart) {\n        if (this.isComplete()) {\n            return false;\n        }\n        if (!this.validatePart(encoderPart)) {\n            return false;\n        }\n        const decoderPart = FountainDecoderPart.fromEncoderPart(encoderPart);\n        this.lastPartIndexes = decoderPart.indexes;\n        this.queuedParts.push(decoderPart);\n        while (!this.isComplete() && this.queuedParts.length > 0) {\n            this.processQueuedItem();\n        }\n        ;\n        this.processedPartsCount += 1;\n        return true;\n    }\n    isComplete() {\n        return Boolean(this.result !== undefined && this.result.length > 0);\n    }\n    isSuccess() {\n        return Boolean(this.error === undefined && this.isComplete());\n    }\n    resultMessage() {\n        return this.isSuccess() ? this.result : Buffer.from([]);\n    }\n    isFailure() {\n        return this.error !== undefined;\n    }\n    resultError() {\n        return this.error ? this.error.message : '';\n    }\n    expectedPartCount() {\n        return this.expectedPartIndexes.length;\n    }\n    getExpectedPartIndexes() {\n        return [...this.expectedPartIndexes];\n    }\n    getReceivedPartIndexes() {\n        return [...this.receivedPartIndexes];\n    }\n    getLastPartIndexes() {\n        return [...this.lastPartIndexes];\n    }\n    estimatedPercentComplete() {\n        if (this.isComplete()) {\n            return 1;\n        }\n        const expectedPartCount = this.expectedPartCount();\n        if (expectedPartCount === 0) {\n            return 0;\n        }\n        // We multiply the expectedPartCount by `1.75` as a way to compensate for the facet\n        // that `this.processedPartsCount` also tracks the duplicate parts that have been\n        // processeed.\n        return Math.min(0.99, this.processedPartsCount / (expectedPartCount * 1.75));\n    }\n    getProgress() {\n        if (this.isComplete()) {\n            return 1;\n        }\n        const expectedPartCount = this.expectedPartCount();\n        if (expectedPartCount === 0) {\n            return 0;\n        }\n        return this.receivedPartIndexes.length / expectedPartCount;\n    }\n}\nexports[\"default\"] = FountainDecoder;\nFountainDecoder.joinFragments = (fragments, messageLength) => {\n    return Buffer.concat(fragments).slice(0, messageLength);\n};\n//# sourceMappingURL=fountainDecoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FountainEncoderPart = void 0;\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"assert\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst fountainUtils_1 = __webpack_require__(/*! ./fountainUtils */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainUtils.js\");\nconst cbor_1 = __webpack_require__(/*! ./cbor */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/cbor.js\");\nclass FountainEncoderPart {\n    constructor(_seqNum, _seqLength, _messageLength, _checksum, _fragment) {\n        this._seqNum = _seqNum;\n        this._seqLength = _seqLength;\n        this._messageLength = _messageLength;\n        this._checksum = _checksum;\n        this._fragment = _fragment;\n    }\n    get messageLength() { return this._messageLength; }\n    get fragment() { return this._fragment; }\n    get seqNum() { return this._seqNum; }\n    get seqLength() { return this._seqLength; }\n    get checksum() { return this._checksum; }\n    cbor() {\n        const result = cbor_1.cborEncode([\n            this._seqNum,\n            this._seqLength,\n            this._messageLength,\n            this._checksum,\n            this._fragment\n        ]);\n        return Buffer.from(result);\n    }\n    description() {\n        return `seqNum:${this._seqNum}, seqLen:${this._seqLength}, messageLen:${this._messageLength}, checksum:${this._checksum}, data:${this._fragment.toString('hex')}`;\n    }\n    static fromCBOR(cborPayload) {\n        const [seqNum, seqLength, messageLength, checksum, fragment,] = cbor_1.cborDecode(cborPayload);\n        assert_1.default(typeof seqNum === 'number');\n        assert_1.default(typeof seqLength === 'number');\n        assert_1.default(typeof messageLength === 'number');\n        assert_1.default(typeof checksum === 'number');\n        assert_1.default(Buffer.isBuffer(fragment) && fragment.length > 0);\n        return new FountainEncoderPart(seqNum, seqLength, messageLength, checksum, Buffer.from(fragment));\n    }\n}\nexports.FountainEncoderPart = FountainEncoderPart;\nclass FountainEncoder {\n    constructor(message, maxFragmentLength = 100, firstSeqNum = 0, minFragmentLength = 10) {\n        const fragmentLength = FountainEncoder.findNominalFragmentLength(message.length, minFragmentLength, maxFragmentLength);\n        this._messageLength = message.length;\n        this._fragments = FountainEncoder.partitionMessage(message, fragmentLength);\n        this.fragmentLength = fragmentLength;\n        this.seqNum = utils_1.toUint32(firstSeqNum);\n        this.checksum = utils_1.getCRC(message);\n    }\n    get fragmentsLength() { return this._fragments.length; }\n    get fragments() { return this._fragments; }\n    get messageLength() { return this._messageLength; }\n    isComplete() {\n        return this.seqNum >= this._fragments.length;\n    }\n    isSinglePart() {\n        return this._fragments.length === 1;\n    }\n    seqLength() {\n        return this._fragments.length;\n    }\n    mix(indexes) {\n        return indexes.reduce((result, index) => utils_1.bufferXOR(this._fragments[index], result), Buffer.alloc(this.fragmentLength, 0));\n    }\n    nextPart() {\n        this.seqNum = utils_1.toUint32(this.seqNum + 1);\n        const indexes = fountainUtils_1.chooseFragments(this.seqNum, this._fragments.length, this.checksum);\n        const mixed = this.mix(indexes);\n        return new FountainEncoderPart(this.seqNum, this._fragments.length, this._messageLength, this.checksum, mixed);\n    }\n    static findNominalFragmentLength(messageLength, minFragmentLength, maxFragmentLength) {\n        assert_1.default(messageLength > 0);\n        assert_1.default(minFragmentLength > 0);\n        assert_1.default(maxFragmentLength >= minFragmentLength);\n        const maxFragmentCount = Math.ceil(messageLength / minFragmentLength);\n        let fragmentLength = 0;\n        for (let fragmentCount = 1; fragmentCount <= maxFragmentCount; fragmentCount++) {\n            fragmentLength = Math.ceil(messageLength / fragmentCount);\n            if (fragmentLength <= maxFragmentLength) {\n                break;\n            }\n        }\n        return fragmentLength;\n    }\n    static partitionMessage(message, fragmentLength) {\n        let remaining = Buffer.from(message);\n        let fragment;\n        let _fragments = [];\n        while (remaining.length > 0) {\n            [fragment, remaining] = utils_1.split(remaining, -fragmentLength);\n            fragment = Buffer\n                .alloc(fragmentLength, 0) // initialize with 0's to achieve the padding\n                .fill(fragment, 0, fragment.length);\n            _fragments.push(fragment);\n        }\n        return _fragments;\n    }\n}\nexports[\"default\"] = FountainEncoder;\n//# sourceMappingURL=fountainEncoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvZm91bnRhaW5FbmNvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLG1FQUFTO0FBQ2pDLHdCQUF3QixtQkFBTyxDQUFDLG1GQUFpQjtBQUNqRCxlQUFlLG1CQUFPLENBQUMsaUVBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQixxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLHNCQUFzQjtBQUN0QixxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixhQUFhLFdBQVcsZ0JBQWdCLGVBQWUsb0JBQW9CLGFBQWEsZUFBZSxTQUFTLCtCQUErQjtBQUN4SztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QixzQkFBc0I7QUFDdEIsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxtQ0FBbUM7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMVlMgMDYgRGV2XFxEZXNrdG9wXFxwcm9qZXRvc25vZGVqc1xcdGVzdGVcXG5vZGVfbW9kdWxlc1xcQG5ncmF2ZWlvXFxiYy11clxcZGlzdFxcZm91bnRhaW5FbmNvZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Gb3VudGFpbkVuY29kZXJQYXJ0ID0gdm9pZCAwO1xuY29uc3QgYXNzZXJ0XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImFzc2VydFwiKSk7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jb25zdCBmb3VudGFpblV0aWxzXzEgPSByZXF1aXJlKFwiLi9mb3VudGFpblV0aWxzXCIpO1xuY29uc3QgY2Jvcl8xID0gcmVxdWlyZShcIi4vY2JvclwiKTtcbmNsYXNzIEZvdW50YWluRW5jb2RlclBhcnQge1xuICAgIGNvbnN0cnVjdG9yKF9zZXFOdW0sIF9zZXFMZW5ndGgsIF9tZXNzYWdlTGVuZ3RoLCBfY2hlY2tzdW0sIF9mcmFnbWVudCkge1xuICAgICAgICB0aGlzLl9zZXFOdW0gPSBfc2VxTnVtO1xuICAgICAgICB0aGlzLl9zZXFMZW5ndGggPSBfc2VxTGVuZ3RoO1xuICAgICAgICB0aGlzLl9tZXNzYWdlTGVuZ3RoID0gX21lc3NhZ2VMZW5ndGg7XG4gICAgICAgIHRoaXMuX2NoZWNrc3VtID0gX2NoZWNrc3VtO1xuICAgICAgICB0aGlzLl9mcmFnbWVudCA9IF9mcmFnbWVudDtcbiAgICB9XG4gICAgZ2V0IG1lc3NhZ2VMZW5ndGgoKSB7IHJldHVybiB0aGlzLl9tZXNzYWdlTGVuZ3RoOyB9XG4gICAgZ2V0IGZyYWdtZW50KCkgeyByZXR1cm4gdGhpcy5fZnJhZ21lbnQ7IH1cbiAgICBnZXQgc2VxTnVtKCkgeyByZXR1cm4gdGhpcy5fc2VxTnVtOyB9XG4gICAgZ2V0IHNlcUxlbmd0aCgpIHsgcmV0dXJuIHRoaXMuX3NlcUxlbmd0aDsgfVxuICAgIGdldCBjaGVja3N1bSgpIHsgcmV0dXJuIHRoaXMuX2NoZWNrc3VtOyB9XG4gICAgY2JvcigpIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gY2Jvcl8xLmNib3JFbmNvZGUoW1xuICAgICAgICAgICAgdGhpcy5fc2VxTnVtLFxuICAgICAgICAgICAgdGhpcy5fc2VxTGVuZ3RoLFxuICAgICAgICAgICAgdGhpcy5fbWVzc2FnZUxlbmd0aCxcbiAgICAgICAgICAgIHRoaXMuX2NoZWNrc3VtLFxuICAgICAgICAgICAgdGhpcy5fZnJhZ21lbnRcbiAgICAgICAgXSk7XG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShyZXN1bHQpO1xuICAgIH1cbiAgICBkZXNjcmlwdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGBzZXFOdW06JHt0aGlzLl9zZXFOdW19LCBzZXFMZW46JHt0aGlzLl9zZXFMZW5ndGh9LCBtZXNzYWdlTGVuOiR7dGhpcy5fbWVzc2FnZUxlbmd0aH0sIGNoZWNrc3VtOiR7dGhpcy5fY2hlY2tzdW19LCBkYXRhOiR7dGhpcy5fZnJhZ21lbnQudG9TdHJpbmcoJ2hleCcpfWA7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tQ0JPUihjYm9yUGF5bG9hZCkge1xuICAgICAgICBjb25zdCBbc2VxTnVtLCBzZXFMZW5ndGgsIG1lc3NhZ2VMZW5ndGgsIGNoZWNrc3VtLCBmcmFnbWVudCxdID0gY2Jvcl8xLmNib3JEZWNvZGUoY2JvclBheWxvYWQpO1xuICAgICAgICBhc3NlcnRfMS5kZWZhdWx0KHR5cGVvZiBzZXFOdW0gPT09ICdudW1iZXInKTtcbiAgICAgICAgYXNzZXJ0XzEuZGVmYXVsdCh0eXBlb2Ygc2VxTGVuZ3RoID09PSAnbnVtYmVyJyk7XG4gICAgICAgIGFzc2VydF8xLmRlZmF1bHQodHlwZW9mIG1lc3NhZ2VMZW5ndGggPT09ICdudW1iZXInKTtcbiAgICAgICAgYXNzZXJ0XzEuZGVmYXVsdCh0eXBlb2YgY2hlY2tzdW0gPT09ICdudW1iZXInKTtcbiAgICAgICAgYXNzZXJ0XzEuZGVmYXVsdChCdWZmZXIuaXNCdWZmZXIoZnJhZ21lbnQpICYmIGZyYWdtZW50Lmxlbmd0aCA+IDApO1xuICAgICAgICByZXR1cm4gbmV3IEZvdW50YWluRW5jb2RlclBhcnQoc2VxTnVtLCBzZXFMZW5ndGgsIG1lc3NhZ2VMZW5ndGgsIGNoZWNrc3VtLCBCdWZmZXIuZnJvbShmcmFnbWVudCkpO1xuICAgIH1cbn1cbmV4cG9ydHMuRm91bnRhaW5FbmNvZGVyUGFydCA9IEZvdW50YWluRW5jb2RlclBhcnQ7XG5jbGFzcyBGb3VudGFpbkVuY29kZXIge1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG1heEZyYWdtZW50TGVuZ3RoID0gMTAwLCBmaXJzdFNlcU51bSA9IDAsIG1pbkZyYWdtZW50TGVuZ3RoID0gMTApIHtcbiAgICAgICAgY29uc3QgZnJhZ21lbnRMZW5ndGggPSBGb3VudGFpbkVuY29kZXIuZmluZE5vbWluYWxGcmFnbWVudExlbmd0aChtZXNzYWdlLmxlbmd0aCwgbWluRnJhZ21lbnRMZW5ndGgsIG1heEZyYWdtZW50TGVuZ3RoKTtcbiAgICAgICAgdGhpcy5fbWVzc2FnZUxlbmd0aCA9IG1lc3NhZ2UubGVuZ3RoO1xuICAgICAgICB0aGlzLl9mcmFnbWVudHMgPSBGb3VudGFpbkVuY29kZXIucGFydGl0aW9uTWVzc2FnZShtZXNzYWdlLCBmcmFnbWVudExlbmd0aCk7XG4gICAgICAgIHRoaXMuZnJhZ21lbnRMZW5ndGggPSBmcmFnbWVudExlbmd0aDtcbiAgICAgICAgdGhpcy5zZXFOdW0gPSB1dGlsc18xLnRvVWludDMyKGZpcnN0U2VxTnVtKTtcbiAgICAgICAgdGhpcy5jaGVja3N1bSA9IHV0aWxzXzEuZ2V0Q1JDKG1lc3NhZ2UpO1xuICAgIH1cbiAgICBnZXQgZnJhZ21lbnRzTGVuZ3RoKCkgeyByZXR1cm4gdGhpcy5fZnJhZ21lbnRzLmxlbmd0aDsgfVxuICAgIGdldCBmcmFnbWVudHMoKSB7IHJldHVybiB0aGlzLl9mcmFnbWVudHM7IH1cbiAgICBnZXQgbWVzc2FnZUxlbmd0aCgpIHsgcmV0dXJuIHRoaXMuX21lc3NhZ2VMZW5ndGg7IH1cbiAgICBpc0NvbXBsZXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zZXFOdW0gPj0gdGhpcy5fZnJhZ21lbnRzLmxlbmd0aDtcbiAgICB9XG4gICAgaXNTaW5nbGVQYXJ0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZnJhZ21lbnRzLmxlbmd0aCA9PT0gMTtcbiAgICB9XG4gICAgc2VxTGVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZnJhZ21lbnRzLmxlbmd0aDtcbiAgICB9XG4gICAgbWl4KGluZGV4ZXMpIHtcbiAgICAgICAgcmV0dXJuIGluZGV4ZXMucmVkdWNlKChyZXN1bHQsIGluZGV4KSA9PiB1dGlsc18xLmJ1ZmZlclhPUih0aGlzLl9mcmFnbWVudHNbaW5kZXhdLCByZXN1bHQpLCBCdWZmZXIuYWxsb2ModGhpcy5mcmFnbWVudExlbmd0aCwgMCkpO1xuICAgIH1cbiAgICBuZXh0UGFydCgpIHtcbiAgICAgICAgdGhpcy5zZXFOdW0gPSB1dGlsc18xLnRvVWludDMyKHRoaXMuc2VxTnVtICsgMSk7XG4gICAgICAgIGNvbnN0IGluZGV4ZXMgPSBmb3VudGFpblV0aWxzXzEuY2hvb3NlRnJhZ21lbnRzKHRoaXMuc2VxTnVtLCB0aGlzLl9mcmFnbWVudHMubGVuZ3RoLCB0aGlzLmNoZWNrc3VtKTtcbiAgICAgICAgY29uc3QgbWl4ZWQgPSB0aGlzLm1peChpbmRleGVzKTtcbiAgICAgICAgcmV0dXJuIG5ldyBGb3VudGFpbkVuY29kZXJQYXJ0KHRoaXMuc2VxTnVtLCB0aGlzLl9mcmFnbWVudHMubGVuZ3RoLCB0aGlzLl9tZXNzYWdlTGVuZ3RoLCB0aGlzLmNoZWNrc3VtLCBtaXhlZCk7XG4gICAgfVxuICAgIHN0YXRpYyBmaW5kTm9taW5hbEZyYWdtZW50TGVuZ3RoKG1lc3NhZ2VMZW5ndGgsIG1pbkZyYWdtZW50TGVuZ3RoLCBtYXhGcmFnbWVudExlbmd0aCkge1xuICAgICAgICBhc3NlcnRfMS5kZWZhdWx0KG1lc3NhZ2VMZW5ndGggPiAwKTtcbiAgICAgICAgYXNzZXJ0XzEuZGVmYXVsdChtaW5GcmFnbWVudExlbmd0aCA+IDApO1xuICAgICAgICBhc3NlcnRfMS5kZWZhdWx0KG1heEZyYWdtZW50TGVuZ3RoID49IG1pbkZyYWdtZW50TGVuZ3RoKTtcbiAgICAgICAgY29uc3QgbWF4RnJhZ21lbnRDb3VudCA9IE1hdGguY2VpbChtZXNzYWdlTGVuZ3RoIC8gbWluRnJhZ21lbnRMZW5ndGgpO1xuICAgICAgICBsZXQgZnJhZ21lbnRMZW5ndGggPSAwO1xuICAgICAgICBmb3IgKGxldCBmcmFnbWVudENvdW50ID0gMTsgZnJhZ21lbnRDb3VudCA8PSBtYXhGcmFnbWVudENvdW50OyBmcmFnbWVudENvdW50KyspIHtcbiAgICAgICAgICAgIGZyYWdtZW50TGVuZ3RoID0gTWF0aC5jZWlsKG1lc3NhZ2VMZW5ndGggLyBmcmFnbWVudENvdW50KTtcbiAgICAgICAgICAgIGlmIChmcmFnbWVudExlbmd0aCA8PSBtYXhGcmFnbWVudExlbmd0aCkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmcmFnbWVudExlbmd0aDtcbiAgICB9XG4gICAgc3RhdGljIHBhcnRpdGlvbk1lc3NhZ2UobWVzc2FnZSwgZnJhZ21lbnRMZW5ndGgpIHtcbiAgICAgICAgbGV0IHJlbWFpbmluZyA9IEJ1ZmZlci5mcm9tKG1lc3NhZ2UpO1xuICAgICAgICBsZXQgZnJhZ21lbnQ7XG4gICAgICAgIGxldCBfZnJhZ21lbnRzID0gW107XG4gICAgICAgIHdoaWxlIChyZW1haW5pbmcubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgW2ZyYWdtZW50LCByZW1haW5pbmddID0gdXRpbHNfMS5zcGxpdChyZW1haW5pbmcsIC1mcmFnbWVudExlbmd0aCk7XG4gICAgICAgICAgICBmcmFnbWVudCA9IEJ1ZmZlclxuICAgICAgICAgICAgICAgIC5hbGxvYyhmcmFnbWVudExlbmd0aCwgMCkgLy8gaW5pdGlhbGl6ZSB3aXRoIDAncyB0byBhY2hpZXZlIHRoZSBwYWRkaW5nXG4gICAgICAgICAgICAgICAgLmZpbGwoZnJhZ21lbnQsIDAsIGZyYWdtZW50Lmxlbmd0aCk7XG4gICAgICAgICAgICBfZnJhZ21lbnRzLnB1c2goZnJhZ21lbnQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfZnJhZ21lbnRzO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEZvdW50YWluRW5jb2Rlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvdW50YWluRW5jb2Rlci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainUtils.js":
/*!************************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/fountainUtils.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.chooseFragments = exports.shuffle = exports.chooseDegree = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst xoshiro_1 = __importDefault(__webpack_require__(/*! ./xoshiro */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/xoshiro.js\"));\nconst alias_sampling_1 = __importDefault(__webpack_require__(/*! @keystonehq/alias-sampling */ \"(ssr)/./node_modules/@keystonehq/alias-sampling/dist/esm/index.js\"));\nconst chooseDegree = (seqLenth, rng) => {\n    const degreeProbabilities = [...new Array(seqLenth)].map((_, index) => 1 / (index + 1));\n    const degreeChooser = alias_sampling_1.default(degreeProbabilities, undefined, rng.nextDouble);\n    return degreeChooser.next() + 1;\n};\nexports.chooseDegree = chooseDegree;\nconst shuffle = (items, rng) => {\n    let remaining = [...items];\n    let result = [];\n    while (remaining.length > 0) {\n        let index = rng.nextInt(0, remaining.length - 1);\n        let item = remaining[index];\n        // remaining.erase(remaining.begin() + index);\n        remaining.splice(index, 1);\n        result.push(item);\n    }\n    return result;\n};\nexports.shuffle = shuffle;\nconst chooseFragments = (seqNum, seqLength, checksum) => {\n    // The first `seqLenth` parts are the \"pure\" fragments, not mixed with any\n    // others. This means that if you only generate the first `seqLenth` parts,\n    // then you have all the parts you need to decode the message.\n    if (seqNum <= seqLength) {\n        return [seqNum - 1];\n    }\n    else {\n        const seed = Buffer.concat([utils_1.intToBytes(seqNum), utils_1.intToBytes(checksum)]);\n        const rng = new xoshiro_1.default(seed);\n        const degree = exports.chooseDegree(seqLength, rng);\n        const indexes = [...new Array(seqLength)].map((_, index) => index);\n        const shuffledIndexes = exports.shuffle(indexes, rng);\n        return shuffledIndexes.slice(0, degree);\n    }\n};\nexports.chooseFragments = chooseFragments;\n//# sourceMappingURL=fountainUtils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvZm91bnRhaW5VdGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGVBQWUsR0FBRyxvQkFBb0I7QUFDaEUsZ0JBQWdCLG1CQUFPLENBQUMsbUVBQVM7QUFDakMsa0NBQWtDLG1CQUFPLENBQUMsdUVBQVc7QUFDckQseUNBQXlDLG1CQUFPLENBQUMscUdBQTRCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXExWUyAwNiBEZXZcXERlc2t0b3BcXHByb2pldG9zbm9kZWpzXFx0ZXN0ZVxcbm9kZV9tb2R1bGVzXFxAbmdyYXZlaW9cXGJjLXVyXFxkaXN0XFxmb3VudGFpblV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jaG9vc2VGcmFnbWVudHMgPSBleHBvcnRzLnNodWZmbGUgPSBleHBvcnRzLmNob29zZURlZ3JlZSA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IHhvc2hpcm9fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi94b3NoaXJvXCIpKTtcbmNvbnN0IGFsaWFzX3NhbXBsaW5nXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIkBrZXlzdG9uZWhxL2FsaWFzLXNhbXBsaW5nXCIpKTtcbmNvbnN0IGNob29zZURlZ3JlZSA9IChzZXFMZW50aCwgcm5nKSA9PiB7XG4gICAgY29uc3QgZGVncmVlUHJvYmFiaWxpdGllcyA9IFsuLi5uZXcgQXJyYXkoc2VxTGVudGgpXS5tYXAoKF8sIGluZGV4KSA9PiAxIC8gKGluZGV4ICsgMSkpO1xuICAgIGNvbnN0IGRlZ3JlZUNob29zZXIgPSBhbGlhc19zYW1wbGluZ18xLmRlZmF1bHQoZGVncmVlUHJvYmFiaWxpdGllcywgdW5kZWZpbmVkLCBybmcubmV4dERvdWJsZSk7XG4gICAgcmV0dXJuIGRlZ3JlZUNob29zZXIubmV4dCgpICsgMTtcbn07XG5leHBvcnRzLmNob29zZURlZ3JlZSA9IGNob29zZURlZ3JlZTtcbmNvbnN0IHNodWZmbGUgPSAoaXRlbXMsIHJuZykgPT4ge1xuICAgIGxldCByZW1haW5pbmcgPSBbLi4uaXRlbXNdO1xuICAgIGxldCByZXN1bHQgPSBbXTtcbiAgICB3aGlsZSAocmVtYWluaW5nLmxlbmd0aCA+IDApIHtcbiAgICAgICAgbGV0IGluZGV4ID0gcm5nLm5leHRJbnQoMCwgcmVtYWluaW5nLmxlbmd0aCAtIDEpO1xuICAgICAgICBsZXQgaXRlbSA9IHJlbWFpbmluZ1tpbmRleF07XG4gICAgICAgIC8vIHJlbWFpbmluZy5lcmFzZShyZW1haW5pbmcuYmVnaW4oKSArIGluZGV4KTtcbiAgICAgICAgcmVtYWluaW5nLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgIHJlc3VsdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmV4cG9ydHMuc2h1ZmZsZSA9IHNodWZmbGU7XG5jb25zdCBjaG9vc2VGcmFnbWVudHMgPSAoc2VxTnVtLCBzZXFMZW5ndGgsIGNoZWNrc3VtKSA9PiB7XG4gICAgLy8gVGhlIGZpcnN0IGBzZXFMZW50aGAgcGFydHMgYXJlIHRoZSBcInB1cmVcIiBmcmFnbWVudHMsIG5vdCBtaXhlZCB3aXRoIGFueVxuICAgIC8vIG90aGVycy4gVGhpcyBtZWFucyB0aGF0IGlmIHlvdSBvbmx5IGdlbmVyYXRlIHRoZSBmaXJzdCBgc2VxTGVudGhgIHBhcnRzLFxuICAgIC8vIHRoZW4geW91IGhhdmUgYWxsIHRoZSBwYXJ0cyB5b3UgbmVlZCB0byBkZWNvZGUgdGhlIG1lc3NhZ2UuXG4gICAgaWYgKHNlcU51bSA8PSBzZXFMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIFtzZXFOdW0gLSAxXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHNlZWQgPSBCdWZmZXIuY29uY2F0KFt1dGlsc18xLmludFRvQnl0ZXMoc2VxTnVtKSwgdXRpbHNfMS5pbnRUb0J5dGVzKGNoZWNrc3VtKV0pO1xuICAgICAgICBjb25zdCBybmcgPSBuZXcgeG9zaGlyb18xLmRlZmF1bHQoc2VlZCk7XG4gICAgICAgIGNvbnN0IGRlZ3JlZSA9IGV4cG9ydHMuY2hvb3NlRGVncmVlKHNlcUxlbmd0aCwgcm5nKTtcbiAgICAgICAgY29uc3QgaW5kZXhlcyA9IFsuLi5uZXcgQXJyYXkoc2VxTGVuZ3RoKV0ubWFwKChfLCBpbmRleCkgPT4gaW5kZXgpO1xuICAgICAgICBjb25zdCBzaHVmZmxlZEluZGV4ZXMgPSBleHBvcnRzLnNodWZmbGUoaW5kZXhlcywgcm5nKTtcbiAgICAgICAgcmV0dXJuIHNodWZmbGVkSW5kZXhlcy5zbGljZSgwLCBkZWdyZWUpO1xuICAgIH1cbn07XG5leHBvcnRzLmNob29zZUZyYWdtZW50cyA9IGNob29zZUZyYWdtZW50cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvdW50YWluVXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainUtils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.URDecoder = exports.UREncoder = exports.UR = void 0;\nconst ur_1 = __importDefault(__webpack_require__(/*! ./ur */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/ur.js\"));\nexports.UR = ur_1.default;\nconst urEncoder_1 = __importDefault(__webpack_require__(/*! ./urEncoder */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/urEncoder.js\"));\nexports.UREncoder = urEncoder_1.default;\nconst urDecoder_1 = __importDefault(__webpack_require__(/*! ./urDecoder */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/urDecoder.js\"));\nexports.URDecoder = urDecoder_1.default;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxpQkFBaUIsR0FBRyxVQUFVO0FBQ2xELDZCQUE2QixtQkFBTyxDQUFDLDZEQUFNO0FBQzNDLFVBQVU7QUFDVixvQ0FBb0MsbUJBQU8sQ0FBQywyRUFBYTtBQUN6RCxpQkFBaUI7QUFDakIsb0NBQW9DLG1CQUFPLENBQUMsMkVBQWE7QUFDekQsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXExWUyAwNiBEZXZcXERlc2t0b3BcXHByb2pldG9zbm9kZWpzXFx0ZXN0ZVxcbm9kZV9tb2R1bGVzXFxAbmdyYXZlaW9cXGJjLXVyXFxkaXN0XFxpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVVJEZWNvZGVyID0gZXhwb3J0cy5VUkVuY29kZXIgPSBleHBvcnRzLlVSID0gdm9pZCAwO1xuY29uc3QgdXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi91clwiKSk7XG5leHBvcnRzLlVSID0gdXJfMS5kZWZhdWx0O1xuY29uc3QgdXJFbmNvZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vdXJFbmNvZGVyXCIpKTtcbmV4cG9ydHMuVVJFbmNvZGVyID0gdXJFbmNvZGVyXzEuZGVmYXVsdDtcbmNvbnN0IHVyRGVjb2Rlcl8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL3VyRGVjb2RlclwiKSk7XG5leHBvcnRzLlVSRGVjb2RlciA9IHVyRGVjb2Rlcl8xLmRlZmF1bHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/ur.js":
/*!*************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/ur.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/errors.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst cbor_1 = __webpack_require__(/*! ./cbor */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/cbor.js\");\nclass UR {\n    constructor(_cborPayload, _type = 'bytes') {\n        this._cborPayload = _cborPayload;\n        this._type = _type;\n        if (!utils_1.isURType(this._type)) {\n            throw new errors_1.InvalidTypeError();\n        }\n    }\n    static fromBuffer(buf) {\n        return new UR(cbor_1.cborEncode(buf));\n    }\n    static from(value, encoding) {\n        return UR.fromBuffer(Buffer.from(value, encoding));\n    }\n    decodeCBOR() {\n        return cbor_1.cborDecode(this._cborPayload);\n    }\n    get type() { return this._type; }\n    get cbor() { return this._cborPayload; }\n    equals(ur2) {\n        return this.type === ur2.type && this.cbor.equals(ur2.cbor);\n    }\n}\nexports[\"default\"] = UR;\n//# sourceMappingURL=ur.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvdXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLG1CQUFPLENBQUMscUVBQVU7QUFDbkMsZ0JBQWdCLG1CQUFPLENBQUMsbUVBQVM7QUFDakMsZUFBZSxtQkFBTyxDQUFDLGlFQUFRO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMVlMgMDYgRGV2XFxEZXNrdG9wXFxwcm9qZXRvc25vZGVqc1xcdGVzdGVcXG5vZGVfbW9kdWxlc1xcQG5ncmF2ZWlvXFxiYy11clxcZGlzdFxcdXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IGNib3JfMSA9IHJlcXVpcmUoXCIuL2Nib3JcIik7XG5jbGFzcyBVUiB7XG4gICAgY29uc3RydWN0b3IoX2Nib3JQYXlsb2FkLCBfdHlwZSA9ICdieXRlcycpIHtcbiAgICAgICAgdGhpcy5fY2JvclBheWxvYWQgPSBfY2JvclBheWxvYWQ7XG4gICAgICAgIHRoaXMuX3R5cGUgPSBfdHlwZTtcbiAgICAgICAgaWYgKCF1dGlsc18xLmlzVVJUeXBlKHRoaXMuX3R5cGUpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuSW52YWxpZFR5cGVFcnJvcigpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tQnVmZmVyKGJ1Zikge1xuICAgICAgICByZXR1cm4gbmV3IFVSKGNib3JfMS5jYm9yRW5jb2RlKGJ1ZikpO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbSh2YWx1ZSwgZW5jb2RpbmcpIHtcbiAgICAgICAgcmV0dXJuIFVSLmZyb21CdWZmZXIoQnVmZmVyLmZyb20odmFsdWUsIGVuY29kaW5nKSk7XG4gICAgfVxuICAgIGRlY29kZUNCT1IoKSB7XG4gICAgICAgIHJldHVybiBjYm9yXzEuY2JvckRlY29kZSh0aGlzLl9jYm9yUGF5bG9hZCk7XG4gICAgfVxuICAgIGdldCB0eXBlKCkgeyByZXR1cm4gdGhpcy5fdHlwZTsgfVxuICAgIGdldCBjYm9yKCkgeyByZXR1cm4gdGhpcy5fY2JvclBheWxvYWQ7IH1cbiAgICBlcXVhbHModXIyKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnR5cGUgPT09IHVyMi50eXBlICYmIHRoaXMuY2Jvci5lcXVhbHModXIyLmNib3IpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFVSO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/ur.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/urDecoder.js":
/*!********************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/urDecoder.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst fountainDecoder_1 = __importDefault(__webpack_require__(/*! ./fountainDecoder */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainDecoder.js\"));\nconst bytewords_1 = __importDefault(__webpack_require__(/*! ./bytewords */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/bytewords.js\"));\nconst assert_1 = __importDefault(__webpack_require__(/*! assert */ \"assert\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst errors_1 = __webpack_require__(/*! ./errors */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/errors.js\");\nconst ur_1 = __importDefault(__webpack_require__(/*! ./ur */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/ur.js\"));\nconst fountainEncoder_1 = __webpack_require__(/*! ./fountainEncoder */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js\");\nclass URDecoder {\n    constructor(fountainDecoder = new fountainDecoder_1.default(), type = 'bytes') {\n        this.fountainDecoder = fountainDecoder;\n        this.type = type;\n        assert_1.default(utils_1.isURType(type), 'Invalid UR type');\n        this.expected_type = '';\n    }\n    static decodeBody(type, message) {\n        const cbor = bytewords_1.default.decode(message, bytewords_1.default.STYLES.MINIMAL);\n        return new ur_1.default(Buffer.from(cbor, 'hex'), type);\n    }\n    validatePart(type) {\n        if (this.expected_type) {\n            return this.expected_type === type;\n        }\n        if (!utils_1.isURType(type)) {\n            return false;\n        }\n        this.expected_type = type;\n        return true;\n    }\n    static decode(message) {\n        const [type, components] = this.parse(message);\n        if (components.length === 0) {\n            throw new errors_1.InvalidPathLengthError();\n        }\n        const body = components[0];\n        return URDecoder.decodeBody(type, body);\n    }\n    static parse(message) {\n        const lowercase = message.toLowerCase();\n        const prefix = lowercase.slice(0, 3);\n        if (prefix !== 'ur:') {\n            throw new errors_1.InvalidSchemeError();\n        }\n        const components = lowercase.slice(3).split('/');\n        const type = components[0];\n        if (components.length < 2) {\n            throw new errors_1.InvalidPathLengthError();\n        }\n        if (!utils_1.isURType(type)) {\n            throw new errors_1.InvalidTypeError();\n        }\n        return [type, components.slice(1)];\n    }\n    static parseSequenceComponent(s) {\n        const components = s.split('-');\n        if (components.length !== 2) {\n            throw new errors_1.InvalidSequenceComponentError();\n        }\n        const seqNum = utils_1.toUint32(Number(components[0]));\n        const seqLength = Number(components[1]);\n        if (seqNum < 1 || seqLength < 1) {\n            throw new errors_1.InvalidSequenceComponentError();\n        }\n        return [seqNum, seqLength];\n    }\n    receivePart(s) {\n        if (this.result !== undefined) {\n            return false;\n        }\n        const [type, components] = URDecoder.parse(s);\n        if (!this.validatePart(type)) {\n            return false;\n        }\n        // If this is a single-part UR then we're done\n        if (components.length === 1) {\n            this.result = URDecoder.decodeBody(type, components[0]);\n            return true;\n        }\n        if (components.length !== 2) {\n            throw new errors_1.InvalidPathLengthError();\n        }\n        const [seq, fragment] = components;\n        const [seqNum, seqLength] = URDecoder.parseSequenceComponent(seq);\n        const cbor = bytewords_1.default.decode(fragment, bytewords_1.default.STYLES.MINIMAL);\n        const part = fountainEncoder_1.FountainEncoderPart.fromCBOR(cbor);\n        if (seqNum !== part.seqNum || seqLength !== part.seqLength) {\n            return false;\n        }\n        if (!this.fountainDecoder.receivePart(part)) {\n            return false;\n        }\n        if (this.fountainDecoder.isSuccess()) {\n            this.result = new ur_1.default(this.fountainDecoder.resultMessage(), type);\n        }\n        else if (this.fountainDecoder.isFailure()) {\n            this.error = new errors_1.InvalidSchemeError();\n        }\n        return true;\n    }\n    resultUR() {\n        return this.result ? this.result : new ur_1.default(Buffer.from([]));\n    }\n    isComplete() {\n        return this.result && this.result.cbor.length > 0;\n    }\n    isSuccess() {\n        return !this.error && this.isComplete();\n    }\n    isError() {\n        return this.error !== undefined;\n    }\n    resultError() {\n        return this.error ? this.error.message : '';\n    }\n    expectedPartCount() {\n        return this.fountainDecoder.expectedPartCount();\n    }\n    expectedPartIndexes() {\n        return this.fountainDecoder.getExpectedPartIndexes();\n    }\n    receivedPartIndexes() {\n        return this.fountainDecoder.getReceivedPartIndexes();\n    }\n    lastPartIndexes() {\n        return this.fountainDecoder.getLastPartIndexes();\n    }\n    estimatedPercentComplete() {\n        return this.fountainDecoder.estimatedPercentComplete();\n    }\n    getProgress() {\n        return this.fountainDecoder.getProgress();\n    }\n}\nexports[\"default\"] = URDecoder;\n//# sourceMappingURL=urDecoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvdXJEZWNvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMENBQTBDLG1CQUFPLENBQUMsdUZBQW1CO0FBQ3JFLG9DQUFvQyxtQkFBTyxDQUFDLDJFQUFhO0FBQ3pELGlDQUFpQyxtQkFBTyxDQUFDLHNCQUFRO0FBQ2pELGdCQUFnQixtQkFBTyxDQUFDLG1FQUFTO0FBQ2pDLGlCQUFpQixtQkFBTyxDQUFDLHFFQUFVO0FBQ25DLDZCQUE2QixtQkFBTyxDQUFDLDZEQUFNO0FBQzNDLDBCQUEwQixtQkFBTyxDQUFDLHVGQUFtQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMVlMgMDYgRGV2XFxEZXNrdG9wXFxwcm9qZXRvc25vZGVqc1xcdGVzdGVcXG5vZGVfbW9kdWxlc1xcQG5ncmF2ZWlvXFxiYy11clxcZGlzdFxcdXJEZWNvZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZm91bnRhaW5EZWNvZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vZm91bnRhaW5EZWNvZGVyXCIpKTtcbmNvbnN0IGJ5dGV3b3Jkc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2J5dGV3b3Jkc1wiKSk7XG5jb25zdCBhc3NlcnRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiYXNzZXJ0XCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpO1xuY29uc3QgdXJfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi91clwiKSk7XG5jb25zdCBmb3VudGFpbkVuY29kZXJfMSA9IHJlcXVpcmUoXCIuL2ZvdW50YWluRW5jb2RlclwiKTtcbmNsYXNzIFVSRGVjb2RlciB7XG4gICAgY29uc3RydWN0b3IoZm91bnRhaW5EZWNvZGVyID0gbmV3IGZvdW50YWluRGVjb2Rlcl8xLmRlZmF1bHQoKSwgdHlwZSA9ICdieXRlcycpIHtcbiAgICAgICAgdGhpcy5mb3VudGFpbkRlY29kZXIgPSBmb3VudGFpbkRlY29kZXI7XG4gICAgICAgIHRoaXMudHlwZSA9IHR5cGU7XG4gICAgICAgIGFzc2VydF8xLmRlZmF1bHQodXRpbHNfMS5pc1VSVHlwZSh0eXBlKSwgJ0ludmFsaWQgVVIgdHlwZScpO1xuICAgICAgICB0aGlzLmV4cGVjdGVkX3R5cGUgPSAnJztcbiAgICB9XG4gICAgc3RhdGljIGRlY29kZUJvZHkodHlwZSwgbWVzc2FnZSkge1xuICAgICAgICBjb25zdCBjYm9yID0gYnl0ZXdvcmRzXzEuZGVmYXVsdC5kZWNvZGUobWVzc2FnZSwgYnl0ZXdvcmRzXzEuZGVmYXVsdC5TVFlMRVMuTUlOSU1BTCk7XG4gICAgICAgIHJldHVybiBuZXcgdXJfMS5kZWZhdWx0KEJ1ZmZlci5mcm9tKGNib3IsICdoZXgnKSwgdHlwZSk7XG4gICAgfVxuICAgIHZhbGlkYXRlUGFydCh0eXBlKSB7XG4gICAgICAgIGlmICh0aGlzLmV4cGVjdGVkX3R5cGUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmV4cGVjdGVkX3R5cGUgPT09IHR5cGU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF1dGlsc18xLmlzVVJUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5leHBlY3RlZF90eXBlID0gdHlwZTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHN0YXRpYyBkZWNvZGUobWVzc2FnZSkge1xuICAgICAgICBjb25zdCBbdHlwZSwgY29tcG9uZW50c10gPSB0aGlzLnBhcnNlKG1lc3NhZ2UpO1xuICAgICAgICBpZiAoY29tcG9uZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5JbnZhbGlkUGF0aExlbmd0aEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYm9keSA9IGNvbXBvbmVudHNbMF07XG4gICAgICAgIHJldHVybiBVUkRlY29kZXIuZGVjb2RlQm9keSh0eXBlLCBib2R5KTtcbiAgICB9XG4gICAgc3RhdGljIHBhcnNlKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc3QgbG93ZXJjYXNlID0gbWVzc2FnZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBjb25zdCBwcmVmaXggPSBsb3dlcmNhc2Uuc2xpY2UoMCwgMyk7XG4gICAgICAgIGlmIChwcmVmaXggIT09ICd1cjonKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuSW52YWxpZFNjaGVtZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29tcG9uZW50cyA9IGxvd2VyY2FzZS5zbGljZSgzKS5zcGxpdCgnLycpO1xuICAgICAgICBjb25zdCB0eXBlID0gY29tcG9uZW50c1swXTtcbiAgICAgICAgaWYgKGNvbXBvbmVudHMubGVuZ3RoIDwgMikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLkludmFsaWRQYXRoTGVuZ3RoRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXV0aWxzXzEuaXNVUlR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5JbnZhbGlkVHlwZUVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFt0eXBlLCBjb21wb25lbnRzLnNsaWNlKDEpXTtcbiAgICB9XG4gICAgc3RhdGljIHBhcnNlU2VxdWVuY2VDb21wb25lbnQocykge1xuICAgICAgICBjb25zdCBjb21wb25lbnRzID0gcy5zcGxpdCgnLScpO1xuICAgICAgICBpZiAoY29tcG9uZW50cy5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5JbnZhbGlkU2VxdWVuY2VDb21wb25lbnRFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNlcU51bSA9IHV0aWxzXzEudG9VaW50MzIoTnVtYmVyKGNvbXBvbmVudHNbMF0pKTtcbiAgICAgICAgY29uc3Qgc2VxTGVuZ3RoID0gTnVtYmVyKGNvbXBvbmVudHNbMV0pO1xuICAgICAgICBpZiAoc2VxTnVtIDwgMSB8fCBzZXFMZW5ndGggPCAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuSW52YWxpZFNlcXVlbmNlQ29tcG9uZW50RXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW3NlcU51bSwgc2VxTGVuZ3RoXTtcbiAgICB9XG4gICAgcmVjZWl2ZVBhcnQocykge1xuICAgICAgICBpZiAodGhpcy5yZXN1bHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IFt0eXBlLCBjb21wb25lbnRzXSA9IFVSRGVjb2Rlci5wYXJzZShzKTtcbiAgICAgICAgaWYgKCF0aGlzLnZhbGlkYXRlUGFydCh0eXBlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHRoaXMgaXMgYSBzaW5nbGUtcGFydCBVUiB0aGVuIHdlJ3JlIGRvbmVcbiAgICAgICAgaWYgKGNvbXBvbmVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICB0aGlzLnJlc3VsdCA9IFVSRGVjb2Rlci5kZWNvZGVCb2R5KHR5cGUsIGNvbXBvbmVudHNbMF0pO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbXBvbmVudHMubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzXzEuSW52YWxpZFBhdGhMZW5ndGhFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IFtzZXEsIGZyYWdtZW50XSA9IGNvbXBvbmVudHM7XG4gICAgICAgIGNvbnN0IFtzZXFOdW0sIHNlcUxlbmd0aF0gPSBVUkRlY29kZXIucGFyc2VTZXF1ZW5jZUNvbXBvbmVudChzZXEpO1xuICAgICAgICBjb25zdCBjYm9yID0gYnl0ZXdvcmRzXzEuZGVmYXVsdC5kZWNvZGUoZnJhZ21lbnQsIGJ5dGV3b3Jkc18xLmRlZmF1bHQuU1RZTEVTLk1JTklNQUwpO1xuICAgICAgICBjb25zdCBwYXJ0ID0gZm91bnRhaW5FbmNvZGVyXzEuRm91bnRhaW5FbmNvZGVyUGFydC5mcm9tQ0JPUihjYm9yKTtcbiAgICAgICAgaWYgKHNlcU51bSAhPT0gcGFydC5zZXFOdW0gfHwgc2VxTGVuZ3RoICE9PSBwYXJ0LnNlcUxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICghdGhpcy5mb3VudGFpbkRlY29kZXIucmVjZWl2ZVBhcnQocGFydCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5mb3VudGFpbkRlY29kZXIuaXNTdWNjZXNzKCkpIHtcbiAgICAgICAgICAgIHRoaXMucmVzdWx0ID0gbmV3IHVyXzEuZGVmYXVsdCh0aGlzLmZvdW50YWluRGVjb2Rlci5yZXN1bHRNZXNzYWdlKCksIHR5cGUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMuZm91bnRhaW5EZWNvZGVyLmlzRmFpbHVyZSgpKSB7XG4gICAgICAgICAgICB0aGlzLmVycm9yID0gbmV3IGVycm9yc18xLkludmFsaWRTY2hlbWVFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXN1bHRVUigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVzdWx0ID8gdGhpcy5yZXN1bHQgOiBuZXcgdXJfMS5kZWZhdWx0KEJ1ZmZlci5mcm9tKFtdKSk7XG4gICAgfVxuICAgIGlzQ29tcGxldGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlc3VsdCAmJiB0aGlzLnJlc3VsdC5jYm9yLmxlbmd0aCA+IDA7XG4gICAgfVxuICAgIGlzU3VjY2VzcygpIHtcbiAgICAgICAgcmV0dXJuICF0aGlzLmVycm9yICYmIHRoaXMuaXNDb21wbGV0ZSgpO1xuICAgIH1cbiAgICBpc0Vycm9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lcnJvciAhPT0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXN1bHRFcnJvcigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZXJyb3IgPyB0aGlzLmVycm9yLm1lc3NhZ2UgOiAnJztcbiAgICB9XG4gICAgZXhwZWN0ZWRQYXJ0Q291bnQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvdW50YWluRGVjb2Rlci5leHBlY3RlZFBhcnRDb3VudCgpO1xuICAgIH1cbiAgICBleHBlY3RlZFBhcnRJbmRleGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mb3VudGFpbkRlY29kZXIuZ2V0RXhwZWN0ZWRQYXJ0SW5kZXhlcygpO1xuICAgIH1cbiAgICByZWNlaXZlZFBhcnRJbmRleGVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mb3VudGFpbkRlY29kZXIuZ2V0UmVjZWl2ZWRQYXJ0SW5kZXhlcygpO1xuICAgIH1cbiAgICBsYXN0UGFydEluZGV4ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvdW50YWluRGVjb2Rlci5nZXRMYXN0UGFydEluZGV4ZXMoKTtcbiAgICB9XG4gICAgZXN0aW1hdGVkUGVyY2VudENvbXBsZXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mb3VudGFpbkRlY29kZXIuZXN0aW1hdGVkUGVyY2VudENvbXBsZXRlKCk7XG4gICAgfVxuICAgIGdldFByb2dyZXNzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5mb3VudGFpbkRlY29kZXIuZ2V0UHJvZ3Jlc3MoKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBVUkRlY29kZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11ckRlY29kZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/urDecoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/urEncoder.js":
/*!********************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/urEncoder.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst fountainEncoder_1 = __importDefault(__webpack_require__(/*! ./fountainEncoder */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/fountainEncoder.js\"));\nconst bytewords_1 = __importDefault(__webpack_require__(/*! ./bytewords */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/bytewords.js\"));\nclass UREncoder {\n    constructor(_ur, maxFragmentLength, firstSeqNum, minFragmentLength) {\n        this.ur = _ur;\n        this.fountainEncoder = new fountainEncoder_1.default(_ur.cbor, maxFragmentLength, firstSeqNum, minFragmentLength);\n    }\n    get fragmentsLength() { return this.fountainEncoder.fragmentsLength; }\n    get fragments() { return this.fountainEncoder.fragments; }\n    get messageLength() { return this.fountainEncoder.messageLength; }\n    get cbor() { return this.ur.cbor; }\n    encodeWhole() {\n        return [...new Array(this.fragmentsLength)].map(() => this.nextPart());\n    }\n    nextPart() {\n        const part = this.fountainEncoder.nextPart();\n        if (this.fountainEncoder.isSinglePart()) {\n            return UREncoder.encodeSinglePart(this.ur);\n        }\n        else {\n            return UREncoder.encodePart(this.ur.type, part);\n        }\n    }\n    static encodeUri(scheme, pathComponents) {\n        const path = pathComponents.join('/');\n        return [scheme, path].join(':');\n    }\n    static encodeUR(pathComponents) {\n        return UREncoder.encodeUri('ur', pathComponents);\n    }\n    static encodePart(type, part) {\n        const seq = `${part.seqNum}-${part.seqLength}`;\n        const body = bytewords_1.default.encode(part.cbor().toString('hex'), bytewords_1.default.STYLES.MINIMAL);\n        return UREncoder.encodeUR([type, seq, body]);\n    }\n    static encodeSinglePart(ur) {\n        const body = bytewords_1.default.encode(ur.cbor.toString('hex'), bytewords_1.default.STYLES.MINIMAL);\n        return UREncoder.encodeUR([ur.type, body]);\n    }\n}\nexports[\"default\"] = UREncoder;\n//# sourceMappingURL=urEncoder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvdXJFbmNvZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMENBQTBDLG1CQUFPLENBQUMsdUZBQW1CO0FBQ3JFLG9DQUFvQyxtQkFBTyxDQUFDLDJFQUFhO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIsc0JBQXNCO0FBQ3RCLDBCQUEwQjtBQUMxQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixZQUFZLEdBQUcsZUFBZTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMVlMgMDYgRGV2XFxEZXNrdG9wXFxwcm9qZXRvc25vZGVqc1xcdGVzdGVcXG5vZGVfbW9kdWxlc1xcQG5ncmF2ZWlvXFxiYy11clxcZGlzdFxcdXJFbmNvZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgZm91bnRhaW5FbmNvZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vZm91bnRhaW5FbmNvZGVyXCIpKTtcbmNvbnN0IGJ5dGV3b3Jkc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2J5dGV3b3Jkc1wiKSk7XG5jbGFzcyBVUkVuY29kZXIge1xuICAgIGNvbnN0cnVjdG9yKF91ciwgbWF4RnJhZ21lbnRMZW5ndGgsIGZpcnN0U2VxTnVtLCBtaW5GcmFnbWVudExlbmd0aCkge1xuICAgICAgICB0aGlzLnVyID0gX3VyO1xuICAgICAgICB0aGlzLmZvdW50YWluRW5jb2RlciA9IG5ldyBmb3VudGFpbkVuY29kZXJfMS5kZWZhdWx0KF91ci5jYm9yLCBtYXhGcmFnbWVudExlbmd0aCwgZmlyc3RTZXFOdW0sIG1pbkZyYWdtZW50TGVuZ3RoKTtcbiAgICB9XG4gICAgZ2V0IGZyYWdtZW50c0xlbmd0aCgpIHsgcmV0dXJuIHRoaXMuZm91bnRhaW5FbmNvZGVyLmZyYWdtZW50c0xlbmd0aDsgfVxuICAgIGdldCBmcmFnbWVudHMoKSB7IHJldHVybiB0aGlzLmZvdW50YWluRW5jb2Rlci5mcmFnbWVudHM7IH1cbiAgICBnZXQgbWVzc2FnZUxlbmd0aCgpIHsgcmV0dXJuIHRoaXMuZm91bnRhaW5FbmNvZGVyLm1lc3NhZ2VMZW5ndGg7IH1cbiAgICBnZXQgY2JvcigpIHsgcmV0dXJuIHRoaXMudXIuY2JvcjsgfVxuICAgIGVuY29kZVdob2xlKCkge1xuICAgICAgICByZXR1cm4gWy4uLm5ldyBBcnJheSh0aGlzLmZyYWdtZW50c0xlbmd0aCldLm1hcCgoKSA9PiB0aGlzLm5leHRQYXJ0KCkpO1xuICAgIH1cbiAgICBuZXh0UGFydCgpIHtcbiAgICAgICAgY29uc3QgcGFydCA9IHRoaXMuZm91bnRhaW5FbmNvZGVyLm5leHRQYXJ0KCk7XG4gICAgICAgIGlmICh0aGlzLmZvdW50YWluRW5jb2Rlci5pc1NpbmdsZVBhcnQoKSkge1xuICAgICAgICAgICAgcmV0dXJuIFVSRW5jb2Rlci5lbmNvZGVTaW5nbGVQYXJ0KHRoaXMudXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIFVSRW5jb2Rlci5lbmNvZGVQYXJ0KHRoaXMudXIudHlwZSwgcGFydCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGVuY29kZVVyaShzY2hlbWUsIHBhdGhDb21wb25lbnRzKSB7XG4gICAgICAgIGNvbnN0IHBhdGggPSBwYXRoQ29tcG9uZW50cy5qb2luKCcvJyk7XG4gICAgICAgIHJldHVybiBbc2NoZW1lLCBwYXRoXS5qb2luKCc6Jyk7XG4gICAgfVxuICAgIHN0YXRpYyBlbmNvZGVVUihwYXRoQ29tcG9uZW50cykge1xuICAgICAgICByZXR1cm4gVVJFbmNvZGVyLmVuY29kZVVyaSgndXInLCBwYXRoQ29tcG9uZW50cyk7XG4gICAgfVxuICAgIHN0YXRpYyBlbmNvZGVQYXJ0KHR5cGUsIHBhcnQpIHtcbiAgICAgICAgY29uc3Qgc2VxID0gYCR7cGFydC5zZXFOdW19LSR7cGFydC5zZXFMZW5ndGh9YDtcbiAgICAgICAgY29uc3QgYm9keSA9IGJ5dGV3b3Jkc18xLmRlZmF1bHQuZW5jb2RlKHBhcnQuY2JvcigpLnRvU3RyaW5nKCdoZXgnKSwgYnl0ZXdvcmRzXzEuZGVmYXVsdC5TVFlMRVMuTUlOSU1BTCk7XG4gICAgICAgIHJldHVybiBVUkVuY29kZXIuZW5jb2RlVVIoW3R5cGUsIHNlcSwgYm9keV0pO1xuICAgIH1cbiAgICBzdGF0aWMgZW5jb2RlU2luZ2xlUGFydCh1cikge1xuICAgICAgICBjb25zdCBib2R5ID0gYnl0ZXdvcmRzXzEuZGVmYXVsdC5lbmNvZGUodXIuY2Jvci50b1N0cmluZygnaGV4JyksIGJ5dGV3b3Jkc18xLmRlZmF1bHQuU1RZTEVTLk1JTklNQUwpO1xuICAgICAgICByZXR1cm4gVVJFbmNvZGVyLmVuY29kZVVSKFt1ci50eXBlLCBib2R5XSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gVVJFbmNvZGVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJFbmNvZGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/urEncoder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/utils.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.bufferXOR = exports.setDifference = exports.arrayContains = exports.arraysEqual = exports.hasPrefix = exports.isURType = exports.intToBytes = exports.toUint32 = exports.getCRCHex = exports.getCRC = exports.split = exports.partition = exports.sha256Hash = void 0;\nconst sha_js_1 = __importDefault(__webpack_require__(/*! sha.js */ \"(ssr)/./node_modules/sha.js/index.js\"));\nconst crc_1 = __webpack_require__(/*! crc */ \"(ssr)/./node_modules/crc/index.js\");\nconst sha256Hash = (data) => sha_js_1.default('sha256').update(data).digest();\nexports.sha256Hash = sha256Hash;\nconst partition = (s, n) => s.match(new RegExp('.{1,' + n + '}', 'g')) || [s];\nexports.partition = partition;\nconst split = (s, length) => [s.slice(0, -length), s.slice(-length)];\nexports.split = split;\nconst getCRC = (message) => crc_1.crc32(message);\nexports.getCRC = getCRC;\nconst getCRCHex = (message) => crc_1.crc32(message).toString(16).padStart(8, '0');\nexports.getCRCHex = getCRCHex;\nconst toUint32 = (number) => number >>> 0;\nexports.toUint32 = toUint32;\nconst intToBytes = (num) => {\n    const arr = new ArrayBuffer(4); // an Int32 takes 4 bytes\n    const view = new DataView(arr);\n    view.setUint32(0, num, false); // byteOffset = 0; litteEndian = false\n    return Buffer.from(arr);\n};\nexports.intToBytes = intToBytes;\nconst isURType = (type) => {\n    return type.split('').every((_, index) => {\n        let c = type.charCodeAt(index);\n        if ('a'.charCodeAt(0) <= c && c <= 'z'.charCodeAt(0))\n            return true;\n        if ('0'.charCodeAt(0) <= c && c <= '9'.charCodeAt(0))\n            return true;\n        if (c === '-'.charCodeAt(0))\n            return true;\n        return false;\n    });\n};\nexports.isURType = isURType;\nconst hasPrefix = (s, prefix) => s.indexOf(prefix) === 0;\nexports.hasPrefix = hasPrefix;\nconst arraysEqual = (ar1, ar2) => {\n    if (ar1.length !== ar2.length) {\n        return false;\n    }\n    return ar1.every(el => ar2.includes(el));\n};\nexports.arraysEqual = arraysEqual;\n/**\n * Checks if ar1 contains all elements of ar2\n * @param ar1 the outer array\n * @param ar2 the array to be contained in ar1\n */\nconst arrayContains = (ar1, ar2) => {\n    return ar2.every(v => ar1.includes(v));\n};\nexports.arrayContains = arrayContains;\n/**\n * Returns the difference array of  `ar1` - `ar2`\n */\nconst setDifference = (ar1, ar2) => {\n    return ar1.filter(x => ar2.indexOf(x) < 0);\n};\nexports.setDifference = setDifference;\nconst bufferXOR = (a, b) => {\n    const length = Math.max(a.length, b.length);\n    const buffer = Buffer.allocUnsafe(length);\n    for (let i = 0; i < length; ++i) {\n        buffer[i] = a[i] ^ b[i];\n    }\n    return buffer;\n};\nexports.bufferXOR = bufferXOR;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxxQkFBcUIsR0FBRyxxQkFBcUIsR0FBRyxtQkFBbUIsR0FBRyxpQkFBaUIsR0FBRyxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0IsR0FBRyxpQkFBaUIsR0FBRyxjQUFjLEdBQUcsYUFBYSxHQUFHLGlCQUFpQixHQUFHLGtCQUFrQjtBQUNwUSxpQ0FBaUMsbUJBQU8sQ0FBQyxvREFBUTtBQUNqRCxjQUFjLG1CQUFPLENBQUMsOENBQUs7QUFDM0I7QUFDQSxrQkFBa0I7QUFDbEIsa0RBQWtELFlBQVk7QUFDOUQsaUJBQWlCO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsY0FBYztBQUNkO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0EsbUNBQW1DLG1CQUFtQjtBQUN0RDtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMVlMgMDYgRGV2XFxEZXNrdG9wXFxwcm9qZXRvc25vZGVqc1xcdGVzdGVcXG5vZGVfbW9kdWxlc1xcQG5ncmF2ZWlvXFxiYy11clxcZGlzdFxcdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJ1ZmZlclhPUiA9IGV4cG9ydHMuc2V0RGlmZmVyZW5jZSA9IGV4cG9ydHMuYXJyYXlDb250YWlucyA9IGV4cG9ydHMuYXJyYXlzRXF1YWwgPSBleHBvcnRzLmhhc1ByZWZpeCA9IGV4cG9ydHMuaXNVUlR5cGUgPSBleHBvcnRzLmludFRvQnl0ZXMgPSBleHBvcnRzLnRvVWludDMyID0gZXhwb3J0cy5nZXRDUkNIZXggPSBleHBvcnRzLmdldENSQyA9IGV4cG9ydHMuc3BsaXQgPSBleHBvcnRzLnBhcnRpdGlvbiA9IGV4cG9ydHMuc2hhMjU2SGFzaCA9IHZvaWQgMDtcbmNvbnN0IHNoYV9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzaGEuanNcIikpO1xuY29uc3QgY3JjXzEgPSByZXF1aXJlKFwiY3JjXCIpO1xuY29uc3Qgc2hhMjU2SGFzaCA9IChkYXRhKSA9PiBzaGFfanNfMS5kZWZhdWx0KCdzaGEyNTYnKS51cGRhdGUoZGF0YSkuZGlnZXN0KCk7XG5leHBvcnRzLnNoYTI1Nkhhc2ggPSBzaGEyNTZIYXNoO1xuY29uc3QgcGFydGl0aW9uID0gKHMsIG4pID0+IHMubWF0Y2gobmV3IFJlZ0V4cCgnLnsxLCcgKyBuICsgJ30nLCAnZycpKSB8fCBbc107XG5leHBvcnRzLnBhcnRpdGlvbiA9IHBhcnRpdGlvbjtcbmNvbnN0IHNwbGl0ID0gKHMsIGxlbmd0aCkgPT4gW3Muc2xpY2UoMCwgLWxlbmd0aCksIHMuc2xpY2UoLWxlbmd0aCldO1xuZXhwb3J0cy5zcGxpdCA9IHNwbGl0O1xuY29uc3QgZ2V0Q1JDID0gKG1lc3NhZ2UpID0+IGNyY18xLmNyYzMyKG1lc3NhZ2UpO1xuZXhwb3J0cy5nZXRDUkMgPSBnZXRDUkM7XG5jb25zdCBnZXRDUkNIZXggPSAobWVzc2FnZSkgPT4gY3JjXzEuY3JjMzIobWVzc2FnZSkudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDgsICcwJyk7XG5leHBvcnRzLmdldENSQ0hleCA9IGdldENSQ0hleDtcbmNvbnN0IHRvVWludDMyID0gKG51bWJlcikgPT4gbnVtYmVyID4+PiAwO1xuZXhwb3J0cy50b1VpbnQzMiA9IHRvVWludDMyO1xuY29uc3QgaW50VG9CeXRlcyA9IChudW0pID0+IHtcbiAgICBjb25zdCBhcnIgPSBuZXcgQXJyYXlCdWZmZXIoNCk7IC8vIGFuIEludDMyIHRha2VzIDQgYnl0ZXNcbiAgICBjb25zdCB2aWV3ID0gbmV3IERhdGFWaWV3KGFycik7XG4gICAgdmlldy5zZXRVaW50MzIoMCwgbnVtLCBmYWxzZSk7IC8vIGJ5dGVPZmZzZXQgPSAwOyBsaXR0ZUVuZGlhbiA9IGZhbHNlXG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGFycik7XG59O1xuZXhwb3J0cy5pbnRUb0J5dGVzID0gaW50VG9CeXRlcztcbmNvbnN0IGlzVVJUeXBlID0gKHR5cGUpID0+IHtcbiAgICByZXR1cm4gdHlwZS5zcGxpdCgnJykuZXZlcnkoKF8sIGluZGV4KSA9PiB7XG4gICAgICAgIGxldCBjID0gdHlwZS5jaGFyQ29kZUF0KGluZGV4KTtcbiAgICAgICAgaWYgKCdhJy5jaGFyQ29kZUF0KDApIDw9IGMgJiYgYyA8PSAneicuY2hhckNvZGVBdCgwKSlcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICBpZiAoJzAnLmNoYXJDb2RlQXQoMCkgPD0gYyAmJiBjIDw9ICc5Jy5jaGFyQ29kZUF0KDApKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGlmIChjID09PSAnLScuY2hhckNvZGVBdCgwKSlcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5pc1VSVHlwZSA9IGlzVVJUeXBlO1xuY29uc3QgaGFzUHJlZml4ID0gKHMsIHByZWZpeCkgPT4gcy5pbmRleE9mKHByZWZpeCkgPT09IDA7XG5leHBvcnRzLmhhc1ByZWZpeCA9IGhhc1ByZWZpeDtcbmNvbnN0IGFycmF5c0VxdWFsID0gKGFyMSwgYXIyKSA9PiB7XG4gICAgaWYgKGFyMS5sZW5ndGggIT09IGFyMi5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gYXIxLmV2ZXJ5KGVsID0+IGFyMi5pbmNsdWRlcyhlbCkpO1xufTtcbmV4cG9ydHMuYXJyYXlzRXF1YWwgPSBhcnJheXNFcXVhbDtcbi8qKlxuICogQ2hlY2tzIGlmIGFyMSBjb250YWlucyBhbGwgZWxlbWVudHMgb2YgYXIyXG4gKiBAcGFyYW0gYXIxIHRoZSBvdXRlciBhcnJheVxuICogQHBhcmFtIGFyMiB0aGUgYXJyYXkgdG8gYmUgY29udGFpbmVkIGluIGFyMVxuICovXG5jb25zdCBhcnJheUNvbnRhaW5zID0gKGFyMSwgYXIyKSA9PiB7XG4gICAgcmV0dXJuIGFyMi5ldmVyeSh2ID0+IGFyMS5pbmNsdWRlcyh2KSk7XG59O1xuZXhwb3J0cy5hcnJheUNvbnRhaW5zID0gYXJyYXlDb250YWlucztcbi8qKlxuICogUmV0dXJucyB0aGUgZGlmZmVyZW5jZSBhcnJheSBvZiAgYGFyMWAgLSBgYXIyYFxuICovXG5jb25zdCBzZXREaWZmZXJlbmNlID0gKGFyMSwgYXIyKSA9PiB7XG4gICAgcmV0dXJuIGFyMS5maWx0ZXIoeCA9PiBhcjIuaW5kZXhPZih4KSA8IDApO1xufTtcbmV4cG9ydHMuc2V0RGlmZmVyZW5jZSA9IHNldERpZmZlcmVuY2U7XG5jb25zdCBidWZmZXJYT1IgPSAoYSwgYikgPT4ge1xuICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWF4KGEubGVuZ3RoLCBiLmxlbmd0aCk7XG4gICAgY29uc3QgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKGxlbmd0aCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7ICsraSkge1xuICAgICAgICBidWZmZXJbaV0gPSBhW2ldIF4gYltpXTtcbiAgICB9XG4gICAgcmV0dXJuIGJ1ZmZlcjtcbn07XG5leHBvcnRzLmJ1ZmZlclhPUiA9IGJ1ZmZlclhPUjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@ngraveio/bc-ur/dist/xoshiro.js":
/*!******************************************************!*\
  !*** ./node_modules/@ngraveio/bc-ur/dist/xoshiro.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@ngraveio/bc-ur/dist/utils.js\");\nconst bignumber_js_1 = __importDefault(__webpack_require__(/*! bignumber.js */ \"(ssr)/./node_modules/bignumber.js/bignumber.js\"));\nconst jsbi_1 = __importDefault(__webpack_require__(/*! jsbi */ \"(ssr)/./node_modules/jsbi/dist/jsbi.mjs\"));\nconst MAX_UINT64 = 0xFFFFFFFFFFFFFFFF;\nconst rotl = (x, k) => jsbi_1.default.bitwiseXor(jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(x, jsbi_1.default.BigInt(k))), jsbi_1.default.BigInt(jsbi_1.default.asUintN(64, jsbi_1.default.signedRightShift(x, (jsbi_1.default.subtract(jsbi_1.default.BigInt(64), jsbi_1.default.BigInt(k)))))));\nclass Xoshiro {\n    constructor(seed) {\n        this.next = () => {\n            return new bignumber_js_1.default(this.roll().toString());\n        };\n        this.nextDouble = () => {\n            return new bignumber_js_1.default(this.roll().toString()).div(MAX_UINT64 + 1);\n        };\n        this.nextInt = (low, high) => {\n            return Math.floor((this.nextDouble().toNumber() * (high - low + 1)) + low);\n        };\n        this.nextByte = () => this.nextInt(0, 255);\n        this.nextData = (count) => ([...new Array(count)].map(() => this.nextByte()));\n        const digest = utils_1.sha256Hash(seed);\n        this.s = [jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0), jsbi_1.default.BigInt(0)];\n        this.setS(digest);\n    }\n    setS(digest) {\n        for (let i = 0; i < 4; i++) {\n            let o = i * 8;\n            let v = jsbi_1.default.BigInt(0);\n            for (let n = 0; n < 8; n++) {\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(v, jsbi_1.default.BigInt(8)));\n                v = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseOr(v, jsbi_1.default.BigInt(digest[o + n])));\n            }\n            this.s[i] = jsbi_1.default.asUintN(64, v);\n        }\n    }\n    roll() {\n        const result = jsbi_1.default.asUintN(64, jsbi_1.default.multiply(rotl(jsbi_1.default.asUintN(64, jsbi_1.default.multiply(this.s[1], jsbi_1.default.BigInt(5))), 7), jsbi_1.default.BigInt(9)));\n        const t = jsbi_1.default.asUintN(64, jsbi_1.default.leftShift(this.s[1], jsbi_1.default.BigInt(17)));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(this.s[0])));\n        this.s[3] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[3], jsbi_1.default.BigInt(this.s[1])));\n        this.s[1] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[1], jsbi_1.default.BigInt(this.s[2])));\n        this.s[0] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[0], jsbi_1.default.BigInt(this.s[3])));\n        this.s[2] = jsbi_1.default.asUintN(64, jsbi_1.default.bitwiseXor(this.s[2], jsbi_1.default.BigInt(t)));\n        this.s[3] = jsbi_1.default.asUintN(64, rotl(this.s[3], 45));\n        return result;\n    }\n}\nexports[\"default\"] = Xoshiro;\n//# sourceMappingURL=xoshiro.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG5ncmF2ZWlvL2JjLXVyL2Rpc3QveG9zaGlyby5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLG1FQUFTO0FBQ2pDLHVDQUF1QyxtQkFBTyxDQUFDLG9FQUFjO0FBQzdELCtCQUErQixtQkFBTyxDQUFDLHFEQUFNO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsT0FBTztBQUMvQjtBQUNBO0FBQ0EsNEJBQTRCLE9BQU87QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZiIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxMVlMgMDYgRGV2XFxEZXNrdG9wXFxwcm9qZXRvc25vZGVqc1xcdGVzdGVcXG5vZGVfbW9kdWxlc1xcQG5ncmF2ZWlvXFxiYy11clxcZGlzdFxceG9zaGlyby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IGJpZ251bWJlcl9qc18xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJiaWdudW1iZXIuanNcIikpO1xuY29uc3QganNiaV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJqc2JpXCIpKTtcbmNvbnN0IE1BWF9VSU5UNjQgPSAweEZGRkZGRkZGRkZGRkZGRkY7XG5jb25zdCByb3RsID0gKHgsIGspID0+IGpzYmlfMS5kZWZhdWx0LmJpdHdpc2VYb3IoanNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwganNiaV8xLmRlZmF1bHQubGVmdFNoaWZ0KHgsIGpzYmlfMS5kZWZhdWx0LkJpZ0ludChrKSkpLCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQoanNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwganNiaV8xLmRlZmF1bHQuc2lnbmVkUmlnaHRTaGlmdCh4LCAoanNiaV8xLmRlZmF1bHQuc3VidHJhY3QoanNiaV8xLmRlZmF1bHQuQmlnSW50KDY0KSwganNiaV8xLmRlZmF1bHQuQmlnSW50KGspKSkpKSkpO1xuY2xhc3MgWG9zaGlybyB7XG4gICAgY29uc3RydWN0b3Ioc2VlZCkge1xuICAgICAgICB0aGlzLm5leHQgPSAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IGJpZ251bWJlcl9qc18xLmRlZmF1bHQodGhpcy5yb2xsKCkudG9TdHJpbmcoKSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMubmV4dERvdWJsZSA9ICgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgYmlnbnVtYmVyX2pzXzEuZGVmYXVsdCh0aGlzLnJvbGwoKS50b1N0cmluZygpKS5kaXYoTUFYX1VJTlQ2NCArIDEpO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLm5leHRJbnQgPSAobG93LCBoaWdoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5mbG9vcigodGhpcy5uZXh0RG91YmxlKCkudG9OdW1iZXIoKSAqIChoaWdoIC0gbG93ICsgMSkpICsgbG93KTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5uZXh0Qnl0ZSA9ICgpID0+IHRoaXMubmV4dEludCgwLCAyNTUpO1xuICAgICAgICB0aGlzLm5leHREYXRhID0gKGNvdW50KSA9PiAoWy4uLm5ldyBBcnJheShjb3VudCldLm1hcCgoKSA9PiB0aGlzLm5leHRCeXRlKCkpKTtcbiAgICAgICAgY29uc3QgZGlnZXN0ID0gdXRpbHNfMS5zaGEyNTZIYXNoKHNlZWQpO1xuICAgICAgICB0aGlzLnMgPSBbanNiaV8xLmRlZmF1bHQuQmlnSW50KDApLCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQoMCksIGpzYmlfMS5kZWZhdWx0LkJpZ0ludCgwKSwganNiaV8xLmRlZmF1bHQuQmlnSW50KDApXTtcbiAgICAgICAgdGhpcy5zZXRTKGRpZ2VzdCk7XG4gICAgfVxuICAgIHNldFMoZGlnZXN0KSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgbyA9IGkgKiA4O1xuICAgICAgICAgICAgbGV0IHYgPSBqc2JpXzEuZGVmYXVsdC5CaWdJbnQoMCk7XG4gICAgICAgICAgICBmb3IgKGxldCBuID0gMDsgbiA8IDg7IG4rKykge1xuICAgICAgICAgICAgICAgIHYgPSBqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCBqc2JpXzEuZGVmYXVsdC5sZWZ0U2hpZnQodiwganNiaV8xLmRlZmF1bHQuQmlnSW50KDgpKSk7XG4gICAgICAgICAgICAgICAgdiA9IGpzYmlfMS5kZWZhdWx0LmFzVWludE4oNjQsIGpzYmlfMS5kZWZhdWx0LmJpdHdpc2VPcih2LCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQoZGlnZXN0W28gKyBuXSkpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc1tpXSA9IGpzYmlfMS5kZWZhdWx0LmFzVWludE4oNjQsIHYpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJvbGwoKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGpzYmlfMS5kZWZhdWx0LmFzVWludE4oNjQsIGpzYmlfMS5kZWZhdWx0Lm11bHRpcGx5KHJvdGwoanNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwganNiaV8xLmRlZmF1bHQubXVsdGlwbHkodGhpcy5zWzFdLCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQoNSkpKSwgNyksIGpzYmlfMS5kZWZhdWx0LkJpZ0ludCg5KSkpO1xuICAgICAgICBjb25zdCB0ID0ganNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwganNiaV8xLmRlZmF1bHQubGVmdFNoaWZ0KHRoaXMuc1sxXSwganNiaV8xLmRlZmF1bHQuQmlnSW50KDE3KSkpO1xuICAgICAgICB0aGlzLnNbMl0gPSBqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCBqc2JpXzEuZGVmYXVsdC5iaXR3aXNlWG9yKHRoaXMuc1syXSwganNiaV8xLmRlZmF1bHQuQmlnSW50KHRoaXMuc1swXSkpKTtcbiAgICAgICAgdGhpcy5zWzNdID0ganNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwganNiaV8xLmRlZmF1bHQuYml0d2lzZVhvcih0aGlzLnNbM10sIGpzYmlfMS5kZWZhdWx0LkJpZ0ludCh0aGlzLnNbMV0pKSk7XG4gICAgICAgIHRoaXMuc1sxXSA9IGpzYmlfMS5kZWZhdWx0LmFzVWludE4oNjQsIGpzYmlfMS5kZWZhdWx0LmJpdHdpc2VYb3IodGhpcy5zWzFdLCBqc2JpXzEuZGVmYXVsdC5CaWdJbnQodGhpcy5zWzJdKSkpO1xuICAgICAgICB0aGlzLnNbMF0gPSBqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCBqc2JpXzEuZGVmYXVsdC5iaXR3aXNlWG9yKHRoaXMuc1swXSwganNiaV8xLmRlZmF1bHQuQmlnSW50KHRoaXMuc1szXSkpKTtcbiAgICAgICAgdGhpcy5zWzJdID0ganNiaV8xLmRlZmF1bHQuYXNVaW50Tig2NCwganNiaV8xLmRlZmF1bHQuYml0d2lzZVhvcih0aGlzLnNbMl0sIGpzYmlfMS5kZWZhdWx0LkJpZ0ludCh0KSkpO1xuICAgICAgICB0aGlzLnNbM10gPSBqc2JpXzEuZGVmYXVsdC5hc1VpbnROKDY0LCByb3RsKHRoaXMuc1szXSwgNDUpKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBYb3NoaXJvO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eG9zaGlyby5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@ngraveio/bc-ur/dist/xoshiro.js\n");

/***/ })

};
;